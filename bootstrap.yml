
sources:
  - name: gcc
    subdir: 'ports'
    git: 'git://gcc.gnu.org/git/gcc.git'
    tag: 'gcc-7_1_0-release'
    tools_required:
      - host-autoconf-v2.64
      - host-automake-v1.11
    regenerate:
      - args: ['autoconf']
        workdir: '@SOURCE_DIR@/libstdc++-v3'

  - name: protobuf
    subdir: 'ports'
    git: 'http://github.com/google/protobuf.git'
    tag: 'v3.1.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.11
      - host-libtool
    regenerate:
      - args: ['./autogen.sh']

tools:
  - name: host-autoconf-v2.64
    source:
      name: autoconf-v2.64
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.64.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.64'
    configure:
      - args: ['@PKG_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
 
  - name: host-autoconf-v2.69
    source:
      name: autoconf-v2.69
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.69'
    configure:
      - args: ['@PKG_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-automake-v1.11
    source:
      name: automake-v1.11
      subdir: 'ports'
      git: 'http://git.savannah.gnu.org/r/automake.git'
      tag: 'v1.11.6'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-s', '@PREFIX@/share/aclocal-1.11', '@PREFIX@/share/aclocal']

  - name: host-automake-v1.15
    source:
        name: automake-v1.15
        subdir: 'ports'
        git: 'http://git.savannah.gnu.org/r/automake.git'
        tag: 'v1.15.1'
        tools_required:
          - host-autoconf-v2.69
        regenerate:
          - args: ['./bootstrap']
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-s', '@PREFIX@/share/aclocal-1.15', '@PREFIX@/share/aclocal']
  
  - name: host-libtool
    exports_aclocal: true
    source:
      name: libtool
      subdir: 'ports'
      git: 'http://git.savannah.gnu.org/r/libtool.git' 
      tag: 'v2.4.5'
      regenerate:
        # libtool's ./bootstrap does a shallow clone with insufficient depth.
        - args: ['git', 'submodule', 'update', '--init']
        - args: ['./bootstrap']
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  # We could run an external pkg-config; however, we need the aclocal files.
  # The easiest way to ensure that they are available is to just install pkg-config.
  - name: host-pkg-config
    exports_aclocal: true
    source:
      name: 'pkg-config'
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/pkg-config'
      tag: 'pkg-config-0.29.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--with-internal-glib'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: cross-binutils
    source:
      name: binutils
      subdir: 'ports'
      git: 'git://sourceware.org/git/binutils-gdb.git'
      tag: 'binutils-2_26'
      tools_required:
        - host-autoconf-v2.64
        - host-automake-v1.11
      regenerate:
        - args: ['autoreconf']
          workdir: '@SOURCE_DIR@/ld'
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm'
        - '--with-sysroot=@SYSROOT_DIR@'
    compile:
      - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
      - args:
          - 'sh'
          - '-c'
          - |
              for f in @PREFIX@/bin/x86_64-managarm-*; do
                tf=$(basename $f | sed 's/x86_64-managarm/x86_64-managarm-kernel/')
                ln -sf $(basename $f) @PREFIX@/bin/$tf
              done

  - name: host-protoc
    exports_shared_libs: true
    from_source: protobuf
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-xorg-macros
    exports_aclocal: true
    source:
      name: xorg-macros
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/xorg/util/macros'
      tag: 'util-macros-1.19.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: kernel-gcc
    from_source: gcc
    tools_required:
      - cross-binutils
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm-kernel'
        - '--with-sysroot=@BUILD_ROOT@/kernel-root'
        - '--enable-languages=c,c++'
        - '--disable-shared'
        - '--disable-hosted-libstdcxx'
    stages:
      - name: compiler
        compile:
          # Set inhibit_libc to prevent libgcov build.
          # This is also required to correctly build the target libraries later.
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
      - name: libgcc
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: system-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: system-gcc
    from_source: gcc
    tools_required:
      - cross-binutils
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
    stages:
      - name: compiler
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
      - name: libgcc
        tools_required:
          - tool: system-gcc
            stage_dependencies: [compiler]
        pkgs_required:
         - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: system-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

packages:
  - name: bash
    source:
      subdir: 'ports'
      git: 'git://git.savannah.gnu.org/bash.git'
      tag: 'bash-4.4'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--without-bash-malloc'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@PKG_COLLECT_DIR@', 'install']

  - name: cairo
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/cairo'
      tag: '1.15.10'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-pkg-config
      # cairo wants to regerenate its build system at configure time.
      - host-autoconf-v2.69
      - host-automake-v1.11
      - host-libtool
      - system-gcc
    pkgs_required:
      - libpng
      - pixman
    configure:
      - args:
        # For now, we build without glesv2 backend as Weston prefers the image backend.
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: coreutils
    source:
      subdir: 'ports'
      git: 'git://git.savannah.gnu.org/coreutils.git'
      tag: 'v8.27'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: eudev
    source:
      subdir: 'ports'
      git: 'https://github.com/gentoo/eudev.git'
      tag: 'v3.2.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-blkid'
        - '--disable-selinux'
        - '--disable-kmod'
        - '--disable-mtd-probe'
        - '--disable-rule-generator'
        - '--disable-manpages'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: libdrm
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/mesa/drm'
      tag: 'libdrm-2.4.81'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
        - host-xorg-macros
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-intel'
        - '--disable-vmwgfx'
        - '--disable-radeon'
        - '--disable-amdgpu'
        - '--disable-nouveau'
        # We might want to build cairo with OpenGL support.
        # Doing so would introduce a circular dependency here.
        - '--disable-cairo-tests'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: libevdev
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/libevdev'
      tag: 'libevdev-1.5.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: libexpat
    source:
      subdir: 'ports'
      git: 'https://github.com/libexpat/libexpat.git'
      tag: 'R_2_2_5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./buildconf.sh']
          workdir: '@SOURCE_DIR@/expat'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/expat/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        # We disable xmlwf to avoid building its documentation.
        - '--without-xmlwf'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: libffi
    source:
      subdir: 'ports'
      git: 'http://github.com/libffi/libffi.git'
      tag: 'v3.2.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: libinput
    source:
      subdir: 'ports'
      git: 'https://github.com/wayland-project/libinput.git'
      tag: '1.9.902'
    tools_required:
      - system-gcc
    pkgs_required:
      - eudev
      - libevdev
      - mtdev
    configure:
      - args:
          - 'meson'
          - '--cross-file'
          - '@SOURCE_ROOT@/scripts/meson.cross-file'
          - '--prefix=/usr'
          - '--libdir=lib'
          - '--buildtype=debugoptimized'
          - '-Dlibwacom=false'
          - '-Ddebug-gui=false'
          - '-Dtests=false'
          - '-Ddocumentation=false'
          - '@PKG_SOURCE_DIR@'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'
  
  - name: libpng
    source:
      subdir: 'ports'
      git: 'http://git.code.sf.net/p/libpng/code'
      tag: 'v1.6.34'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['git', 'clean', '-xf', '-e', 'xbstrap.*']
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    pkgs_required:
      - zlib
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: libxkbcommon
    source:
      subdir: 'ports'
      git: 'http://github.com/xkbcommon/libxkbcommon.git'
      tag: 'xkbcommon-0.8.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
        - host-xorg-macros
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-x11'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: kmscube
    source:
      subdir: 'ports'
      git: 'http://gitlab.freedesktop.org/mesa/kmscube.git'
      branch: 'master'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - mesa
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: mesa
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/mesa/mesa'
      tag: 'mesa-17.1.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libdrm
      - wayland
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-glx'
        - '--with-platforms=drm,surfaceless,wayland'
        - '--with-dri-drivers=swrast'
        - '--with-gallium-drivers=swrast'
        # --enable-debug logs each buffer mmap()/munmap() which
        # leads to multiple log lines for each call to eglSwapBuffers().
        #- '--enable-debug'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: mlibc
    source:
      git: 'http://github.com/managarm/mlibc.git'
      branch: 'master'
    tools_required:
      - tool: system-gcc
        stage_dependencies: [compiler]
      - host-protoc
    implict_package: true
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@PKG_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: mtdev
    source:
      subdir: 'ports'
      git: 'http://bitmath.org/git/mtdev.git'
      disable_shallow_fetch: true
      tag: 'v1.1.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: nano
    source:
      subdir: 'ports'
      git: 'git://git.savannah.gnu.org/nano.git'
      tag: 'v2.9.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    pkgs_required:
      - ncurses
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: ncurses
    source:
      subdir: 'ports'
      url: 'ftp://ftp.invisible-island.net/ncurses/ncurses.tar.gz'
      format: 'tar.gz'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@', 'all']
      - args: ['make', 'DESTDIR=@PKG_COLLECT_DIR@', 'install']

  - name: pixman
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/pixman'
      tag: 'pixman-0.34.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libpng
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: protobuf
    from_source: protobuf
    tools_required:
      - system-gcc
      - host-protoc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        # protobuf needs a host protoc when cross-compiling.
        - '--with-protoc=protoc'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: wayland
    source:
      subdir: 'ports'
      git: 'http://github.com/wayland-project/wayland.git'
      tag: '1.14.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libexpat
      - libffi
      - wayland-protocols
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-host-scanner'
        - '--disable-dtd-validation'
        - '--disable-documentation'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: wayland-protocols
    source:
      subdir: 'ports'
      git: 'http://github.com/wayland-project/wayland-protocols.git'
      tag: '1.12'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: weston
    source:
      subdir: 'ports'
      git: 'http://github.com/wayland-project/weston.git'
      tag: '4.0.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - cairo
      - libinput
      - libxkbcommon
      - mesa
      - wayland
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-xwayland'
        - '--disable-x11-compositor'
        - '--disable-weston-launch'
        - '--disable-fbdev-compositor'
        - '--disable-simple-dmabuf-drm-client'
        - '--disable-simple-dmabuf-v4l-client'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

  - name: zlib
    source:
      subdir: 'ports'
      git: 'http://github.com/madler/zlib.git'
      tag: 'v1.2.11'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@PKG_SOURCE_DIR@/configure'
        environ:
          CHOST: 'x86_64-managarm'
          prefix: '/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@PKG_COLLECT_DIR@'

