
sources:
  - name: binutils
    subdir: 'ports'
    git: 'git://sourceware.org/git/binutils-gdb.git'
    tag: 'binutils-2_26'
    tools_required:
      - host-autoconf-v2.64
      - host-automake-v1.11
    regenerate:
      - args: ['autoreconf']
        workdir: '@THIS_SOURCE_DIR@/ld'

  - name: gcc
    subdir: 'ports'
    git: 'git://gcc.gnu.org/git/gcc.git'
    tag: 'gcc-7_1_0-release'
    tools_required:
      - host-autoconf-v2.64
      - host-automake-v1.11
    regenerate:
      # download_prerequisites should probably move to some "post_checkout" step.
      - args: ['./contrib/download_prerequisites']
        workdir: '@THIS_SOURCE_DIR@'
      - args: ['autoconf']
        workdir: '@THIS_SOURCE_DIR@/gcc'
      - args: ['autoconf']
        workdir: '@THIS_SOURCE_DIR@/libstdc++-v3'

  - name: protobuf
    subdir: 'ports'
    git: 'http://github.com/google/protobuf.git'
    tag: 'v3.1.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.11
      - host-libtool
    regenerate:
      - args: ['./autogen.sh']

  - name: managarm
    git: 'https://github.com/managarm/managarm.git'
    branch: 'master'
    sources_required:
      - acpica
      - cxxshim
      - frigg
      - libsmarter
    regenerate:
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/acpica', '@THIS_SOURCE_DIR@/subprojects/acpica']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/cxxshim', '@THIS_SOURCE_DIR@/subprojects/cxxshim']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/frigg', '@THIS_SOURCE_DIR@/subprojects/frigg']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/libsmarter', '@THIS_SOURCE_DIR@/subprojects/libsmarter']

  - name: mlibc
    git: 'http://github.com/managarm/mlibc.git'
    branch: 'master'
    sources_required:
      - cxxshim
      - frigg
      - libdrm
      - managarm
    regenerate:
      - args: ['ln', '-sf', '@SOURCE_ROOT@/managarm', '@THIS_SOURCE_DIR@/subprojects/managarm']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/cxxshim', '@THIS_SOURCE_DIR@/subprojects/cxxshim']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/frigg', '@THIS_SOURCE_DIR@/subprojects/frigg']

tools:
  - name: host-autoconf-v2.64
    source:
      name: autoconf-v2.64
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.64.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.64'
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-autoconf-v2.69
    source:
      name: autoconf-v2.69
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.69'
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-automake-v1.11
    source:
      name: automake-v1.11
      subdir: 'ports'
      git: 'http://git.savannah.gnu.org/r/automake.git'
      tag: 'v1.11.6'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.11', '@PREFIX@/share/aclocal']

  - name: host-automake-v1.15
    source:
        name: automake-v1.15
        subdir: 'ports'
        git: 'http://git.savannah.gnu.org/r/automake.git'
        tag: 'v1.15.1'
        tools_required:
          - host-autoconf-v2.69
        regenerate:
          - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.15', '@PREFIX@/share/aclocal']

  - name: host-frigg_pb
    from_source: managarm
    tools_required:
      - tool: host-protoc
        recursive: true
    configure:
      - args:
        - 'meson'
        - '--prefix=@PREFIX@'
        - '-Dbuild_tools=true'
        - '@THIS_SOURCE_DIR@'
        environ:
          # This can be seen as a hack -- remove it.
          'LIBRARY_PATH': '@BUILD_ROOT@/tools/host-protoc/lib'
    compile:
      - args: ['ninja']
        environ:
          # This can be seen as a hack -- remove it.
          'CPATH': '@BUILD_ROOT@/tools/host-protoc/include'
          'LIBRARY_PATH': '@BUILD_ROOT@/tools/host-protoc/lib'
    install:
      - args: ['ninja', 'install']
        environ:
          # This can be seen as a hack -- remove it.
          'CPATH': '@BUILD_ROOT@/tools/host-protoc/include'
          'LIBRARY_PATH': '@BUILD_ROOT@/tools/host-protoc/lib'

  - name: host-libtool
    exports_aclocal: true
    source:
      name: libtool
      subdir: 'ports'
      git: 'http://git.savannah.gnu.org/r/libtool.git'
      tag: 'v2.4.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        # libtool's ./bootstrap does a shallow clone with insufficient depth.
        - args: ['git', 'submodule', 'update', '--init']
        - args: ['./bootstrap']
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  # We could run an external pkg-config; however, we need the aclocal files.
  # The easiest way to ensure that they are available is to just install pkg-config.
  - name: host-pkg-config
    exports_aclocal: true
    source:
      name: 'pkg-config'
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/pkg-config'
      tag: 'pkg-config-0.29.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--with-internal-glib'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: cross-binutils
    from_source: binutils
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm'
        - '--with-sysroot=@SYSROOT_DIR@'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        # -g blows up the binary size.
        - 'CFLAGS=-O2'
    compile:
      - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
      - args: |
          for f in @PREFIX@/bin/x86_64-managarm-*; do
            tf=$(basename $f | sed 's/x86_64-managarm/x86_64-managarm-kernel/')
            ln -sf $(basename $f) @PREFIX@/bin/$tf
          done

  - name: host-protoc
    exports_shared_libs: true
    from_source: protobuf
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        # -g blows up the binary size.
        - 'CXXFLAGS=-O2'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-xorg-macros
    exports_aclocal: true
    source:
      name: xorg-macros
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/xorg/util/macros'
      tag: 'util-macros-1.19.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: kernel-gcc
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm-kernel'
        - '--with-sysroot=@BUILD_ROOT@/kernel-root'
        - '--enable-languages=c,c++'
        - '--disable-shared'
        - '--disable-hosted-libstdcxx'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        compile:
          # Copy rudimentary header files into the kernel sysroot.
          - args: |
              mkdir -p @BUILD_ROOT@/kernel-root/usr/include
              cp -r @SOURCE_ROOT@/patches/kernel-libc/* @BUILD_ROOT@/kernel-root/usr/include/
          # Set inhibit_libc to prevent libgcov build.
          # This is also required to correctly build the target libraries later.
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
      - name: libgcc
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: system-gcc
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        pkgs_required:
         - mlibc-headers
        compile:
          - args: ['mkdir', '-p', '@SYSROOT_DIR@/usr/include']
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
      - name: libgcc
        tools_required:
          - tool: system-gcc
            stage_dependencies: [compiler]
        pkgs_required:
         - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: system-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

packages:
  - name: acpica
    source:
      subdir: 'ports'
      git: 'https://github.com/acpica/acpica.git'
      tag: 'R09_30_16'
    configure: []
    build: []

  - name: bash
    source:
      subdir: 'ports'
      git: 'git://git.savannah.gnu.org/bash.git'
      tag: 'bash-4.4'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--without-bash-malloc'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']

  - name: binutils
    from_source: binutils
    tools_required:
      - tool: system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--target=x86_64-managarm'
        - '--with-sysroot=/'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        # -g blows up the binary size.
        - 'CFLAGS=-O2'
    build:
      #- args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
      - args: ['make', 'all-binutils', 'all-gas', 'all-ld']
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: boost
    source:
      subdir: 'ports'
      git: 'http://github.com/boostorg/boost.git'
      tag: 'boost-1.62.0'
      regenerate:
        - args: |
            if ! git -C '@THIS_SOURCE_DIR@' remote | grep -q origin; then
              git -C '@THIS_SOURCE_DIR@' remote add origin http://github.com/boostorg/boost.git
            fi
        - args: ['git', '-C', '@THIS_SOURCE_DIR@', 'submodule', 'update', '--init']
        - args: ['./bootstrap.sh']
        - args: ['./b2', 'headers']
    configure: []
    build:
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/include']
      - args: ['cp', '-r', '--dereference', '@THIS_SOURCE_DIR@/boost',
            '@THIS_COLLECT_DIR@/usr/include']

  - name: cairo
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/cairo'
      tag: '1.16.0'
      tools_required:
        - host-autoconf-v2.64
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
      - host-autoconf-v2.64
      - host-automake-v1.11
      - host-libtool
      - host-pkg-config
    pkgs_required:
      - libpng
      - pixman
    configure:
      - args:
        # For now, we build without glesv2 backend as Weston prefers the image backend.
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        environ:
          # freetype-config does not support cross-compilation.
          FREETYPE_CONFIG: 'no'
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: fafnir
    source:
      subdir: 'ports'
      git: 'http://github.com/managarm/fafnir.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: cxxshim
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/cxxshim.git'
      branch: 'master'
    configure: []
    build: []

  - name: frigg
    source:
      subdir: 'ports'
      git: 'http://github.com/managarm/frigg.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: gcc
    from_source: gcc
    tools_required:
      - tool: system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--target=x86_64-managarm'
        - '--with-sysroot=/'
        - '--with-build-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    build:
      #- args: ['make', '-j@PARALLELISM@', 'all-gcc']
      - args: ['make', 'all-gcc', 'all-target-libgcc', 'all-target-libstdc++-v3']
      - args: ['make', 'install-gcc', 'install-target-libgcc', 'install-target-libstdc++-v3']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libcofiber
    source:
      subdir: 'ports'
      git: 'http://github.com/avdgrinten/libcofiber.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure: []
    build:
      - args:
        - 'make'
        - '-f'
        - '@THIS_SOURCE_DIR@/library.makefile'
        - 'S=@THIS_SOURCE_DIR@'
        - 'DESTDIR=@THIS_COLLECT_DIR@'
        - 'prefix=/usr/'
        - 'CXX=x86_64-managarm-g++'
        - 'LD=x86_64-managarm-ld'
        - 'AS=x86_64-managarm-as'
        - 'install'

  - name: coreutils
    default: false
    source:
      subdir: 'ports'
      git: 'git://git.savannah.gnu.org/coreutils.git'
      tag: 'v8.27'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: eudev
    source:
      subdir: 'ports'
      git: 'https://github.com/gentoo/eudev.git'
      tag: 'v3.2.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-blkid'
        - '--disable-selinux'
        - '--disable-kmod'
        - '--disable-mtd-probe'
        - '--disable-rule-generator'
        - '--disable-manpages'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: lewis
    source:
      subdir: 'ports'
      git: 'http://github.com/managarm/lewis.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'


  - name: libasync
    source:
      subdir: 'ports'
      git: 'http://github.com/avdgrinten/libasync.git'
      branch: 'master'
    tools_required:
      - system-gcc
    pkgs_required:
      - boost
    configure: []
    build:
      - args:
        - 'make'
        - '-f'
        - '@THIS_SOURCE_DIR@/library.makefile'
        - 'S=@THIS_SOURCE_DIR@'
        - 'DESTDIR=@THIS_COLLECT_DIR@'
        - 'prefix=/usr/'
        - 'CXX=x86_64-managarm-g++'
        - 'LD=x86_64-managarm-ld'
        - 'AS=x86_64-managarm-as'
        - 'install'

  - name: libdrm
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/mesa/drm'
      tag: 'libdrm-2.4.81'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
        - host-xorg-macros
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-intel'
        - '--disable-vmwgfx'
        - '--disable-radeon'
        - '--disable-amdgpu'
        - '--disable-nouveau'
        # We might want to build cairo with OpenGL support.
        # Doing so would introduce a circular dependency here.
        - '--disable-cairo-tests'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libevdev
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/libevdev'
      tag: 'libevdev-1.5.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libexpat
    source:
      subdir: 'ports'
      git: 'https://github.com/libexpat/libexpat.git'
      tag: 'R_2_2_5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./buildconf.sh']
          workdir: '@THIS_SOURCE_DIR@/expat'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/expat/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        # We disable xmlwf to avoid building its documentation.
        - '--without-xmlwf'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libffi
    source:
      subdir: 'ports'
      git: 'http://github.com/libffi/libffi.git'
      tag: 'v3.2.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libinput
    source:
      subdir: 'ports'
      git: 'https://github.com/wayland-project/libinput.git'
      tag: '1.9.902'
    tools_required:
      - system-gcc
    pkgs_required:
      - eudev
      - libevdev
      - mtdev
    configure:
      - args:
          - 'meson'
          - '--cross-file'
          - '@SOURCE_ROOT@/scripts/meson.cross-file'
          - '--prefix=/usr'
          - '--libdir=lib'
          - '--buildtype=debugoptimized'
          - '-Dlibwacom=false'
          - '-Ddebug-gui=false'
          - '-Dtests=false'
          - '-Ddocumentation=false'
          - '@THIS_SOURCE_DIR@'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libpng
    source:
      subdir: 'ports'
      git: 'http://git.code.sf.net/p/libpng/code'
      tag: 'v1.6.34'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['git', 'clean', '-xf', '-e', 'xbstrap.*']
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    pkgs_required:
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libsmarter
    source:
      subdir: 'ports'
      git: 'http://github.com/avdgrinten/libsmarter.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure: []
    build:
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/include']
      - args:
        - 'make'
        - '-f'
        - '@THIS_SOURCE_DIR@/library.makefile'
        - 'S=@THIS_SOURCE_DIR@'
        - 'DESTDIR=@THIS_COLLECT_DIR@'
        - 'prefix=/usr/'
        - 'CXX=x86_64-managarm-g++'
        - 'LD=x86_64-managarm-ld'
        - 'AS=x86_64-managarm-as'
        - 'install'

  - name: libxkbcommon
    source:
      subdir: 'ports'
      git: 'http://github.com/xkbcommon/libxkbcommon.git'
      tag: 'xkbcommon-0.8.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
        - host-xorg-macros
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
      - host-pkg-config
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-x11'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: llvm
    default: false
    source:
      subdir: 'ports'
      git: 'http://git.llvm.org/git/llvm.git/'
      branch: 'release_60'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'cmake'
      #  - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@BUILD_ROOT@/CMakeToolchain.txt'
        - '@THIS_SOURCE_DIR@'
    build:
      #- args: ['ninja']
      #- args: ['ninja', 'install']
      - args: ['make']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kmscube
    source:
      subdir: 'ports'
      git: 'http://gitlab.freedesktop.org/mesa/kmscube.git'
      branch: 'master'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - mesa
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: managarm-kernel
    from_source: managarm
    sources_required:
      - frigg
    tools_required:
      - host-frigg_pb
      - host-protoc
      - kernel-gcc
    pkgs_required:
      - acpica
      - cxxshim
      - frigg
    configure:
      - args:
        - 'meson'
        - '--cross-file=@SOURCE_ROOT@/scripts/meson-kernel.cross-file'
        - '--buildtype=debugoptimized'
        - '-Dbuild_kernel=true'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']

  - name: managarm-system
    from_source: managarm
    tools_required:
      - host-pkg-config
      - host-protoc
      - system-gcc
    pkgs_required:
      - fafnir
      - lewis
      - libasync
      - libcofiber
      - libdrm
      - libsmarter
      - protobuf
    configure:
      - args:
        - 'meson'
        - '--cross-file=@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dbuild_drivers=true'
        - '@THIS_SOURCE_DIR@'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          'DESTDIR': '@THIS_COLLECT_DIR@'

  - name: mesa
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/mesa/mesa'
      tag: 'mesa-17.1.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libdrm
      - wayland
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-glx'
        - '--with-platforms=drm,surfaceless,wayland'
        - '--with-dri-drivers=swrast'
        - '--with-gallium-drivers=swrast'
        # --enable-debug logs each buffer mmap()/munmap() which
        # leads to multiple log lines for each call to eglSwapBuffers().
        #- '--enable-debug'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: mlibc-headers
    from_source: mlibc
    tools_required:
      - host-frigg_pb
      - host-protoc
    implict_package: true
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '@THIS_SOURCE_DIR@'
        - '-Dheaders_only=true'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: mlibc
    from_source: mlibc
    tools_required:
      - host-frigg_pb
      - tool: system-gcc
        stage_dependencies: [compiler]
      - host-protoc
    implict_package: true
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: mtdev
    source:
      subdir: 'ports'
      git: 'http://bitmath.org/git/mtdev.git'
      disable_shallow_fetch: true
      tag: 'v1.1.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: nano
    default: false
    source:
      subdir: 'ports'
      git: 'git://git.savannah.gnu.org/nano.git'
      tag: 'v2.9.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    pkgs_required:
      - ncurses
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: nasm
    default: false
    source:
      subdir: 'ports'
      git: 'https://repo.or.cz/nasm.git'
      tag: 'nasm-2.14.02'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: ncurses
    default: false
    source:
      subdir: 'ports'
      url: 'ftp://ftp.invisible-island.net/ncurses/ncurses.tar.gz'
      format: 'tar.gz'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@', 'all']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']

  - name: pixman
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/pixman'
      tag: 'pixman-0.34.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libpng
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: protobuf
    from_source: protobuf
    tools_required:
      - system-gcc
      - host-protoc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        # protobuf needs a host protoc when cross-compiling.
        - '--with-protoc=protoc'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: wayland
    source:
      subdir: 'ports'
      git: 'http://github.com/wayland-project/wayland.git'
      tag: '1.14.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
      - host-pkg-config
      - system-gcc
    pkgs_required:
      - libexpat
      - libffi
      - wayland-protocols
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-host-scanner'
        - '--disable-dtd-validation'
        - '--disable-documentation'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: wayland-protocols
    source:
      subdir: 'ports'
      git: 'http://github.com/wayland-project/wayland-protocols.git'
      tag: '1.13'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      # A wayland-scanner executable is also required. TODO: Build it.
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: weston
    source:
      subdir: 'ports'
      git: 'http://github.com/wayland-project/weston.git'
      tag: '4.0.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - cairo
      - libinput
      - libxkbcommon
      - mesa
      - wayland
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-xwayland'
        - '--disable-x11-compositor'
        - '--disable-weston-launch'
        - '--disable-fbdev-compositor'
        - '--disable-simple-dmabuf-drm-client'
        - '--disable-simple-dmabuf-v4l-client'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: xkeyboard-config
    default: false
    source:
      subdir: 'ports'
      git: 'git://anongit.freedesktop.org/xkeyboard-config'
      tag: 'xkeyboard-config-2.23.1'
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
#    tools_required:
#      - system-gcc
    configure: []
#      - args:
#        - '@THIS_SOURCE_DIR@/configure'
#        - '--host=x86_64-managarm'
#        - '--prefix=/usr'
    build: []
#      - args: ['make', '-j@PARALLELISM@']
#      - args: ['make', 'install']
#        environ:
#          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: zlib
    source:
      subdir: 'ports'
      git: 'http://github.com/madler/zlib.git'
      tag: 'v1.2.11'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        environ:
          CHOST: 'x86_64-managarm'
          prefix: '/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

