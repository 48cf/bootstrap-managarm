imports:
  - file: bootstrap.d/app-accessibility.yml
  - file: bootstrap.d/app-admin.yml
  - file: bootstrap.d/app-arch.yml
  - file: bootstrap.d/app-crypt.yml
  - file: bootstrap.d/app-editors.yml
  - file: bootstrap.d/app-emulation.yml
  - file: bootstrap.d/app-misc.yml
  - file: bootstrap.d/app-shells.yml
  - file: bootstrap.d/app-text.yml
  - file: bootstrap.d/dev-db.yml
  - file: bootstrap.d/dev-lang.yml
  - file: bootstrap.d/dev-libs.yml
  - file: bootstrap.d/dev-util.yml
  - file: bootstrap.d/dev-qt.yml
  - file: bootstrap.d/games-board.yml
  - file: bootstrap.d/games-emulation.yml
  - file: bootstrap.d/games-fps.yml
  - file: bootstrap.d/games-misc.yml
  - file: bootstrap.d/games-simulation.yml
  - file: bootstrap.d/gnome-base.yml
  - file: bootstrap.d/gnome-extra.yml
  - file: bootstrap.d/gui-apps.yml
  - file: bootstrap.d/gui-libs.yml
  - file: bootstrap.d/gui-wm.yml
  - file: bootstrap.d/kde-apps.yml
  - file: bootstrap.d/kde-frameworks.yml
  - file: bootstrap.d/kde-plasma.yml
  - file: bootstrap.d/lxqt-base.yml
  - file: bootstrap.d/managarm-build.yml
  - file: bootstrap.d/managarm-libc.yml
  - file: bootstrap.d/managarm-libs.yml
  - file: bootstrap.d/managarm-system.yml
  - file: bootstrap.d/media-fonts.yml
  - file: bootstrap.d/media-gfx.yml
  - file: bootstrap.d/media-libs.yml
  - file: bootstrap.d/meta-pkgs.yml
  - file: bootstrap.d/net-dns.yml
  - file: bootstrap.d/net-irc.yml
  - file: bootstrap.d/net-libs.yml
  - file: bootstrap.d/net-misc.yml
  - file: bootstrap.d/net-print.yml
  - file: bootstrap.d/net-wireless.yml
  - file: bootstrap.d/sys-apps.yml
  - file: bootstrap.d/sys-auth.yml
  - file: bootstrap.d/sys-boot.yml
  - file: bootstrap.d/sys-devel.yml
  - file: bootstrap.d/sys-kernel.yml
  - file: bootstrap.d/sys-libs.yml
  - file: bootstrap.d/sys-process.yml
  - file: bootstrap.d/www-client.yml
  - file: bootstrap.d/x11-apps.yml
  - file: bootstrap.d/x11-base.yml
  - file: bootstrap.d/x11-libs.yml
  - file: bootstrap.d/x11-misc.yml
  - file: bootstrap.d/x11-terms.yml
  - file: bootstrap.d/x11-themes.yml

general:
    patch_author: The Managarm Project
    patch_email: info@managarm.org
    everything_by_default: false
    mandate_hashes_for_archives: true
    enable_network_isolation: true
    cargo:
        config_toml: 'extrafiles/config.toml'

repositories:
    tool_archives: 'https://builds.managarm.org/repos/tools/managarm/latest'
    xbps: 'https://repos.managarm.org/repos/amd64/'

# TODO: We currently don't support computed options or anything of that sort,
#       so we just define the architecture, and the triple as 2 options
#       (some packages, like llvm and libjpeg-turbo need the architecture)
declare_options:
  - name: arch
    default: x86_64
  - name: arch-triple
    default: x86_64-managarm
  - name: mount-using
    default: guestfs

tools:
  - name: wayland-scanner
    labels: [aarch64]
    architecture: noarch
    from_source: wayland
    tools_required:
      - virtual: pkgconfig-for-host
        program_name: host-pkg-config
    configure:
      - args:
        - 'meson'
        - '--native-file'
        - '@SOURCE_ROOT@/scripts/meson.native-file'
        - '--prefix=@PREFIX@'
        - '-Ddtd_validation=false'
        - '-Ddocumentation=false'
        - '-Dscanner=true'
        - '-Dlibraries=false'
        - '-Dtests=false'
        - '@THIS_SOURCE_DIR@'
    compile:
      - args: ['ninja']
    install:
      - args: ['ninja', 'install']

packages:
  - name: core-files
    labels: [aarch64]
    architecture: noarch
    metadata:
      summary: Managarm base filesystem layout
      description: This package provides the base filesystem layout that Managarm uses, includes various directories, essential files and symlinks.
      spdx: 'MIT'
      website: 'https://managarm.org'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['sys-apps']
    default: true
    source:
      subdir: meta-sources
      version: '1.0'
    revision: 9
    configure: []
    build:
      # Create initial directories
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/etc']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/run']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/root']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/dev']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/sys']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/proc']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/tmp']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/home/managarm']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/share']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/var']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/lib']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/sbin']
      # xbps does not install empty directories, .keep files fixes this
      - args: ['touch', '@THIS_COLLECT_DIR@/etc/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/run/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/root/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/dev/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/sys/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/proc/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/tmp/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/home/managarm/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/var/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/bin/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/sbin/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/lib/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/share/.keep']
      # Install a default passwd, group and resolv.conf
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/passwd', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/group', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/shadow', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/gshadow', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/resolv.conf', '@THIS_COLLECT_DIR@/etc']
      # Link /bin, /lib and /sbin to their /usr counterparts
      - args: ['ln', '-svf', 'usr/bin', '@THIS_COLLECT_DIR@/bin']
      - args: ['ln', '-svf', 'usr/lib', '@THIS_COLLECT_DIR@/lib']
      - args: ['ln', '-svf', 'usr/sbin', '@THIS_COLLECT_DIR@/sbin']
      # Link /var/run to /run
      - args: ['ln', '-svf', 'var/run', '@THIS_COLLECT_DIR@/run']
      # Create a compatibility symlink for ld.so
      - args: ['ln', '-svf', '/usr/lib/ld.so', '@THIS_COLLECT_DIR@/lib/ld-init.so']

  # Deprecated in favor of openssl
  - name: libressl
    source:
      subdir: 'ports'
      git: 'https://github.com/libressl-portable/portable.git'
      tag: 'v3.0.2'
      version: '3.0.2'
      regenerate:
        - args: ['./update.sh']
          isolate_network: false
    tools_required:
      - host-cmake
      - system-gcc
    pkgs_required:
      - mlibc
    revision: 9
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DLIBRESSL_APPS=OFF'
        - '-DBUILD_SHARED_LIBS=ON'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: kmscube
    source:
      rolling_version: true
      version: '0.0pl@ROLLING_ID@'
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/mesa/kmscube.git'
      branch: 'master'
      commit: b235bae4c674b6ef4ac15a40b46000876bee9425
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-pkg-config
      - system-gcc
    pkgs_required:
      - mlibc
      - mesa
    revision: 9
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=@OPTION:arch-triple@'
        - '--prefix=/usr'
        environ:
          CFLAGS: '-O0 -g -Wall -Wextra -std=c99 -fcommon'
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true


tasks:
  - name: useful-image-dependencies
    pkgs_required:
      - base
      - weston-desktop
    tools_required:
      - system-gcc
    args: ''

  - name: update-initrd
    pkgs_required:
      - managarm-kernel
      - managarm-system
    tasks_required:
      - task: useful-image-dependencies
        order_only: true
      - task: initialize-empty-image
        order_only: true
    sources_required:
      - managarm
    tools_required:
      - cross-binutils
    args:
      - '@SOURCE_ROOT@/managarm/tools/gen-initrd.py'
      - '--triple'
      - '@OPTION:arch-triple@'
    workdir: '@BUILD_ROOT@'

  - name: initialize-empty-image
    sources_required:
      - image_create
    tools_required:
      - host-limine
    args: |
      if [ "@OPTION:mount-using@" == guestfs ]; then
          elevation=-g # Use libguestfs for root-less image creation.
      fi
      @SOURCE_ROOT@/ports/image_create/image_create.sh \
      -oimage \
      -s4G \
      -pgpt \
      -text2 \
      -llimine \
      -be \
      $elevation
    environ:
      'LIMINE_PATH': '@BUILD_ROOT@/tools/host-limine/share/limine'
      'GPT_TYPE': '64212B3B-56A1-4DFB-971E-BC8CD027996A'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: make-image
    tools_required:
      - host-limine
    pkgs_required:
      - managarm-kernel
      - managarm-system
    tasks_required:
      - update-initrd
    args:
      - '@SOURCE_ROOT@/scripts/update-image.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - '--mount-using'
      - '@OPTION:mount-using@'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: remake-image
    tools_required:
      - host-limine
    pkgs_required:
      - managarm-kernel
      - managarm-system
    tasks_required:
      - update-initrd
    args:
      - '@SOURCE_ROOT@/scripts/update-image.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - 'remake'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: xz-image
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    artifact_files:
      - name: image.xz
        path: '@BUILD_ROOT@'
    args: ['xz', '--fast', '--keep', '@BUILD_ROOT@/image']

  - name: qemu
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/vm-util.py'
      - 'qemu'
      - '--arch'
      - '@OPTION:arch@'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: test-image
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/test-image.py'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: mlibc-docs
    pkgs_required:
      - mlibc-docs
    args:
      - 'python'
      - '-m'
      - 'http.server'
      - '8080'
      - '-d'
      - '@BUILD_ROOT@/pkg-builds/mlibc-docs/docs'
    containerless: true

  - name: mlibc-sysdeps
    args:
      - '@SOURCE_ROOT@/scripts/compile-mlibc-sysdeps.sh'
      - '@SOURCE_ROOT@/mlibc'
      - '@SYSROOT_DIR@/usr/src/linux-headers'
    workdir: '@BUILD_ROOT@'
