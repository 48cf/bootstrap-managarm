imports:
  - file: bootstrap.d/app-accessibility.yml
  - file: bootstrap.d/app-admin.yml
  - file: bootstrap.d/app-arch.yml
  - file: bootstrap.d/app-crypt.yml
  - file: bootstrap.d/app-editors.yml
  - file: bootstrap.d/app-emulation.yml
  - file: bootstrap.d/app-misc.yml
  - file: bootstrap.d/app-shells.yml
  - file: bootstrap.d/app-text.yml
  - file: bootstrap.d/dev-db.yml
  - file: bootstrap.d/dev-lang.yml
  - file: bootstrap.d/dev-libs.yml
  - file: bootstrap.d/dev-util.yml
  - file: bootstrap.d/dev-qt.yml
  - file: bootstrap.d/games-board.yml
  - file: bootstrap.d/games-emulation.yml
  - file: bootstrap.d/games-fps.yml
  - file: bootstrap.d/games-misc.yml
  - file: bootstrap.d/games-simulation.yml
  - file: bootstrap.d/gnome-base.yml
  - file: bootstrap.d/gnome-extra.yml
  - file: bootstrap.d/gui-apps.yml
  - file: bootstrap.d/gui-libs.yml
  - file: bootstrap.d/gui-wm.yml
  - file: bootstrap.d/kde-apps.yml
  - file: bootstrap.d/kde-frameworks.yml
  - file: bootstrap.d/kde-plasma.yml
  - file: bootstrap.d/lxqt-base.yml
  - file: bootstrap.d/managarm-libc.yml
  - file: bootstrap.d/managarm-libs.yml
  - file: bootstrap.d/managarm-system.yml
  - file: bootstrap.d/media-fonts.yml
  - file: bootstrap.d/media-gfx.yml
  - file: bootstrap.d/media-libs.yml
  - file: bootstrap.d/meta-pkgs.yml
  - file: bootstrap.d/net-dns.yml
  - file: bootstrap.d/net-irc.yml
  - file: bootstrap.d/net-libs.yml
  - file: bootstrap.d/net-misc.yml
  - file: bootstrap.d/net-print.yml
  - file: bootstrap.d/net-wireless.yml
  - file: bootstrap.d/sys-apps.yml
  - file: bootstrap.d/sys-auth.yml
  - file: bootstrap.d/sys-boot.yml
  - file: bootstrap.d/sys-devel.yml
  - file: bootstrap.d/sys-kernel.yml
  - file: bootstrap.d/sys-libs.yml
  - file: bootstrap.d/sys-process.yml
  - file: bootstrap.d/www-client.yml
  - file: bootstrap.d/x11-apps.yml
  - file: bootstrap.d/x11-base.yml
  - file: bootstrap.d/x11-libs.yml
  - file: bootstrap.d/x11-misc.yml
  - file: bootstrap.d/x11-terms.yml
  - file: bootstrap.d/x11-themes.yml

general:
    patch_author: The Managarm Project
    patch_email: info@managarm.org
    everything_by_default: false
    mandate_hashes_for_archives: true
    enable_network_isolation: true
    cargo:
        config_toml: 'extrafiles/config.toml'

repositories:
    tool_archives: 'https://builds.managarm.org/repos/tools/managarm/latest'
    xbps: 'https://repos.managarm.org/repos/amd64/'

# TODO: We currently don't support computed options or anything of that sort,
#       so we just define the architecture, and the triple as 2 options
#       (some packages, like llvm and libjpeg-turbo need the architecture)
declare_options:
  - name: arch
    default: x86_64
  - name: arch-triple
    default: x86_64-managarm
  - name: mount-using
    default: guestfs

sources:
  - name: binutils
    subdir: 'ports'
    git: 'https://github.com/managarm/binutils-gdb.git'
    tag: 'managarm/binutils-2_40_2'
    version: '2.40'
    sources_required: ['gnuconfig']
    regenerate:
      - args: ['cp', '@SOURCE_ROOT@/ports/gnuconfig/config.sub', '@THIS_SOURCE_DIR@/.']
      - args: ['cp', '@SOURCE_ROOT@/ports/gnuconfig/config.guess', '@THIS_SOURCE_DIR@/.']

  - name: libdrm
    subdir: 'ports'
    git: 'https://gitlab.freedesktop.org/mesa/drm'
    tag: 'libdrm-2.4.115'
    version: '2.4.115'

  - name: libtool
    subdir: 'ports'
    git: 'https://git.savannah.gnu.org/git/libtool.git'
    tag: 'v2.4.6'
    version: '2.4.6'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
    regenerate:
      # libtool's ./bootstrap does a shallow clone with insufficient depth.
      - args: ['git', 'submodule', 'update', '--init']
        isolate_network: false
      - args: ['./bootstrap']
      - args: ['cp',
          '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
          '@THIS_SOURCE_DIR@/build-aux/']
      - args: ['cp',
          '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.guess',
          '@THIS_SOURCE_DIR@/build-aux/']

  - name: llvm
    subdir: 'ports'
    git: 'https://github.com/llvm/llvm-project'
    tag: 'llvmorg-18.1.2'
    version: '18.1.2'

  - name: gcc
    subdir: 'ports'
    git: 'https://github.com/managarm/gcc.git'
    tag: 'managarm/gcc-13.2.3'
    version: '13.2.3'
    sources_required: ['gnuconfig']
    regenerate:
      - args: ['cp', '@SOURCE_ROOT@/ports/gnuconfig/config.sub', '@THIS_SOURCE_DIR@/.']
      - args: ['cp', '@SOURCE_ROOT@/ports/gnuconfig/config.guess', '@THIS_SOURCE_DIR@/.']

  - name: wayland
    subdir: 'ports'
    url: 'https://gitlab.freedesktop.org/wayland/wayland/-/releases/1.22.0/downloads/wayland-1.22.0.tar.xz'
    checksum: 'blake2b:b0bb366e7f3494813d1574228ae5dd48eccde035120d6dd8709e3a24738681ab9dd9ba6a13924b6a35982d331fa8911fa7346911da9f618be9c9109da0288629'
    extract_path: 'wayland-1.22.0'
    patch-path-strip: 1
    format: 'tar.xz'
    tag: '1.22.0'
    version: '1.22.0'

  - name: gnuconfig
    subdir: 'ports'
    git: 'https://git.savannah.gnu.org/git/config.git'
    branch: 'master'
    commit: '63acb96f92473ceb5e21d873d7c0aee266b3d6d3'
    version: '20230121'


tools:
  - name: host-autoconf-v2.64
    labels: [aarch64]
    architecture: noarch
    source:
      name: autoconf-v2.64
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.64.tar.xz'
      format: 'tar.xz'
      checksum: blake2b:598873209a67725150cd4cf09c4b78b26b3d1782f259846da48dc8106a1d32ae2b24f3a864c3be0e9e8dc7d6b6ca8781b83ff33a691c88e68391d1ea861ccf23
      extract_path: 'autoconf-2.64'
      version: '2.64'
    revision: 2
    configure:
      # Despite its efforts to be POSIX-compatible, autoconf 2.64 fails to configure on dash
      # (as it assumes that echo does not evaluate backslash escapes).
      # It *also* fails when setting CONFIG_SHELL to /bin/bash.
      # The manual (in section "Defining Variables") mentions this bug and the following
      # workaround: We set *both* CONFIG_SHELL *and* execute the script using /bin/bash.
      - args: ['/bin/bash', '@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
        environ:
          'CONFIG_SHELL': '/bin/bash'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-autoconf-v2.71
    labels: [aarch64, riscv64]
    architecture: noarch
    source:
      name: autoconf-v2.71
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.xz'
      format: 'tar.xz'
      checksum: blake2b:7fd4b98b4cfff10720e8da6ee91045637991643b50fcb3e47a0ecfcc01600f7b7b36fd1c0a5f08b68a418f1bdbd8d5a98de1008157595dd37cc3a31facb61416
      extract_path: 'autoconf-2.71'
      version: '2.71'
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-autoconf-v2.69
    labels: [aarch64, riscv64]
    architecture: noarch
    source:
      name: autoconf-v2.69
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
      format: 'tar.xz'
      checksum: blake2b:71d33d72a06e9a05fbed0eda73bc9d8a3805c7c90bf082959862f93f3c5f01192114176e84d84ecb58fa99512eafbc0ab21ad1407be18c8c63bb3dc1117c482d
      extract_path: 'autoconf-2.69'
      version: '2.69'
    revision: 2
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-automake-v1.11
    labels: [aarch64, riscv64]
    architecture: noarch
    source:
      name: automake-v1.11
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/git/automake.git'
      tag: 'v1.11.6'
      version: '1.11.6'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.11', '@PREFIX@/share/aclocal']

  - name: host-autoconf-archive
    labels: [aarch64]
    architecture: noarch
    exports_aclocal: true
    source:
      subdir: 'ports'
      git: 'https://github.com/autoconf-archive/autoconf-archive.git'
      tag: 'v2019.01.06'
      version: '2019.01.06'
    revision: 2
    install:
      - args: ['mkdir', '-p', '@BUILD_ROOT@/tools/host-autoconf-archive/share/']
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/m4', '@BUILD_ROOT@/tools/host-autoconf-archive/share/aclocal']

  - name: host-automake-v1.15
    labels: [aarch64, riscv64]
    architecture: noarch
    source:
      name: automake-v1.15
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/git/automake.git'
      tag: 'v1.15.1'
      version: '1.15.1'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.15', '@PREFIX@/share/aclocal']

  - name: host-automake-v1.16
    labels: [aarch64, riscv64]
    architecture: noarch
    source:
      name: automake-v1.16
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/git/automake.git'
      tag: 'v1.16.5'
      version: '1.16.5'
      tools_required:
       - host-autoconf-v2.71
      regenerate:
       - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.71
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.16', '@PREFIX@/share/aclocal']


  - name: host-libtool
    labels: [aarch64, riscv64]
    architecture: noarch
    exports_aclocal: true
    from_source: libtool
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-llvm-toolchain
    labels: [aarch64, riscv64]
    architecture: noarch
    exports_shared_libs: true
    from_source: llvm
    sources_required:
      - binutils
    tools_required:
      - host-cmake
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'
        - '-DCMAKE_C_COMPILER=gcc'
        - '-DCMAKE_CXX_COMPILER=g++'

        # LLVM configuration options.
        # We really have to build LLVM in Release mode.
        # Building it in debug mode produces tens of GiB of debugging info.
        - '-DCMAKE_BUILD_TYPE=Release'
        - '-DLLVM_LINK_LLVM_DYLIB=ON'
        - '-DLLVM_TARGETS_TO_BUILD=X86;AArch64;RISCV'
        - '-DLLVM_ENABLE_PROJECTS=clang;clang-tools-extra;lld'

        # clang configuration options.
        - '-DDEFAULT_SYSROOT=@SYSROOT_DIR@'

        # Gold linker configuration options.
        - '-DLLVM_BINUTILS_INCDIR=@SOURCE_ROOT@/ports/binutils/include'

        - '@THIS_SOURCE_DIR@/llvm'
    compile:
      - args: ['ninja']
      # Build on a single CPU to prevent OOM on smaller systems.
      #- args: ['ninja', '-j1']
    install:
      - args: ['ninja', 'install']
        quiet: true

  - name: cross-binutils
    labels: [aarch64, riscv64]
    architecture: '@OPTION:arch@'
    from_source: binutils
    revision: 3
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--with-pkgversion=managarm'
        - '--with-bugurl=https://github.com/managarm/bootstrap-managarm/issues/'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        # -g blows up the binary size.
        - 'CFLAGS=-O2'
    compile:
      - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
      - args: |
          for f in @PREFIX@/bin/@OPTION:arch-triple@-*; do
            tf=$(basename $f | sed 's/@OPTION:arch-triple@/@OPTION:arch-triple@-kernel/')
            ln -sf $(basename $f) @PREFIX@/bin/$tf
          done

  - name: kernel-gcc
    labels: [aarch64, riscv64]
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--with-pkgversion=managarm'
        - '--with-bugurl=https://github.com/managarm/bootstrap-managarm/issues/'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@-kernel'
        - '--without-headers'
        - '--without-newlib'
        - '--enable-languages=c,c++,lto'
        - '--disable-shared'
        - '--disable-hosted-libstdcxx'
        - '--disable-libquadmath'
        - '--disable-libssp'
        - '--disable-libsanitizer'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        compile:
          # Copy rudimentary header files into the kernel sysroot.
          - args: |
              mkdir -p @BUILD_ROOT@/kernel-root/usr/include
              cp -r @SOURCE_ROOT@/patches/kernel-libc/* @BUILD_ROOT@/kernel-root/usr/include/
          # Set inhibit_libc to prevent libgcov build.
          # This is also required to correctly build the target libraries later.
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/@OPTION:arch-triple@-kernel/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/as',
                               '@PREFIX@/@OPTION:arch-triple@-kernel/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/ld',
                               '@PREFIX@/@OPTION:arch-triple@-kernel/bin/ld']
      - name: libgcc
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']

      - name: libstdc++
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [compiler, libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: system-gcc
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--with-pkgversion=managarm'
        - '--with-bugurl=https://github.com/managarm/bootstrap-managarm/issues/'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++,lto'
        - '--enable-initfini-array'
        - '--enable-libstdcxx-filesystem-ts'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        pkgs_required:
         - mlibc-headers
        compile:
          # GCC complains if the include directory is non-existant.
          - args: ['mkdir', '-p', '@SYSROOT_DIR@/usr/include']
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/@OPTION:arch-triple@/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/as',
                               '@PREFIX@/@OPTION:arch-triple@/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/ld',
                               '@PREFIX@/@OPTION:arch-triple@/bin/ld']
      - name: libgcc
        tools_required:
          - tool: system-gcc
            stage_dependencies: [compiler]
        pkgs_required:
         - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: system-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: bootstrap-system-gcc
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    revision: 2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--with-pkgversion=managarm'
        - '--with-bugurl=https://github.com/managarm/bootstrap-managarm/issues/'
        - '--prefix=@PREFIX@'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--without-headers'
        - '--without-newlib'
        - '--enable-languages=c,c++,lto'
        - '--disable-shared'
        - '--disable-hosted-libstdcxx'
        # libstdc++ can detect that wchar_t is supported by @SYSROOT_DIR@ and
        # try to enable code we don't want for wchar handling.  just remove it.
        - '--disable-wchar_t'
        - '--disable-libssp'
        - '--disable-libsanitizer'
        - '--disable-libquadmath'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        pkgs_required:
         - mlibc-headers
        compile:
          # GCC complains if the include directory is non-existant.
          - args: ['mkdir', '-p', '@SYSROOT_DIR@/usr/include']
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/@OPTION:arch-triple@/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/as',
                               '@PREFIX@/@OPTION:arch-triple@/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/@OPTION:arch-triple@/bin/ld',
                               '@PREFIX@/@OPTION:arch-triple@/bin/ld']
      - name: libgcc
        tools_required:
          - tool: bootstrap-system-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++-v3
        tools_required:
          - tool: bootstrap-system-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: wayland-scanner
    labels: [aarch64]
    architecture: noarch
    from_source: wayland
    tools_required:
      - virtual: pkgconfig-for-host
        program_name: host-pkg-config
    configure:
      - args:
        - 'meson'
        - '--native-file'
        - '@SOURCE_ROOT@/scripts/meson.native-file'
        - '--prefix=@PREFIX@'
        - '-Ddtd_validation=false'
        - '-Ddocumentation=false'
        - '-Dscanner=true'
        - '-Dlibraries=false'
        - '-Dtests=false'
        - '@THIS_SOURCE_DIR@'
    compile:
      - args: ['ninja']
    install:
      - args: ['ninja', 'install']

  - name: host-icmake
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    source:
      subdir: 'ports'
      git: 'https://gitlab.com/fbb-git/icmake'
      tag: '9.03.01'
      regenerate:
        - args: ['sed', '-i', 's#"usr/bin"#"bin"#', '@THIS_SOURCE_DIR@/icmake/INSTALL.im']
    revision: 2
    configure:
      - args: ['@THIS_SOURCE_DIR@/icmake/icm_prepare', '@PREFIX@/']
        workdir: '@THIS_SOURCE_DIR@/icmake'
    compile:
      - args: ['@THIS_SOURCE_DIR@/icmake/icm_bootstrap', 'x']
        workdir: '@THIS_SOURCE_DIR@/icmake'
    install:
      - args: ['@THIS_SOURCE_DIR@/icmake/icm_install', 'strip', 'all', '/']
        workdir: '@THIS_SOURCE_DIR@/icmake'

  - name: host-yodl
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    source:
      subdir: 'ports'
      git: 'https://gitlab.com/fbb-git/yodl'
      tag: '4.03.03'
      regenerate:
        - args: ['sed', '-i', 's#"/usr"#"/"#', '@THIS_SOURCE_DIR@/yodl/INSTALL.im']
        - args: ['sed', '-i', 's#/usr/bin/icmake#@BUILD_ROOT@/tools/host-icmake/bin/icmake#', '@THIS_SOURCE_DIR@/yodl/build']
    tools_required:
      - host-icmake
    compile:
      - args: ['./build', 'programs']
        workdir: '@THIS_SOURCE_DIR@/yodl'
      - args: ['./build', 'macros']
        workdir: '@THIS_SOURCE_DIR@/yodl'
    install:
      - args: ['./build', 'install', 'programs', '@PREFIX@']
        workdir: '@THIS_SOURCE_DIR@/yodl'
      - args: ['./build', 'install', 'macros', '@PREFIX@']
        workdir: '@THIS_SOURCE_DIR@/yodl'

packages:
  - name: binutils
    architecture: '@OPTION:arch@'
    metadata:
      summary: Tools necessary to build programs
      description: This package provides various tools commonly used during package development, including the GNU linker and the GNU assembler. This package also includes libbfd and libopcodes.
      spdx: 'GPL-3.0-or-later'
      website: 'https://www.gnu.org/software/binutils/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['sys-devel']
    from_source: binutils
    tools_required:
      - tool: system-gcc
    pkgs_required:
      - mlibc
    revision: 5
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--with-pkgversion=managarm'
        - '--with-bugurl=https://github.com/managarm/bootstrap-managarm/issues/'
        - '--host=@OPTION:arch-triple@'
        - '--prefix=/usr'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=/'
        - '--disable-nls'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        # -g blows up the binary size.
        - 'CFLAGS=-O2'
    build:
      #- args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
      - args: ['make', 'all-binutils', 'all-gas', 'all-ld']
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: core-files
    labels: [aarch64]
    architecture: noarch
    metadata:
      summary: Managarm base filesystem layout
      description: This package provides the base filesystem layout that Managarm uses, includes various directories, essential files and symlinks.
      spdx: 'MIT'
      website: 'https://managarm.org'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['sys-apps']
    default: true
    source:
      subdir: meta-sources
      version: '1.0'
    revision: 9
    configure: []
    build:
      # Create initial directories
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/etc']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/run']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/root']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/dev']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/sys']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/proc']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/tmp']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/home/managarm']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/share']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/var']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/lib']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/sbin']
      # xbps does not install empty directories, .keep files fixes this
      - args: ['touch', '@THIS_COLLECT_DIR@/etc/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/run/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/root/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/dev/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/sys/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/proc/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/tmp/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/home/managarm/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/var/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/bin/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/sbin/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/lib/.keep']
      - args: ['touch', '@THIS_COLLECT_DIR@/usr/share/.keep']
      # Install a default passwd, group and resolv.conf
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/passwd', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/group', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/shadow', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/gshadow', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/resolv.conf', '@THIS_COLLECT_DIR@/etc']
      # Link /bin, /lib and /sbin to their /usr counterparts
      - args: ['ln', '-svf', 'usr/bin', '@THIS_COLLECT_DIR@/bin']
      - args: ['ln', '-svf', 'usr/lib', '@THIS_COLLECT_DIR@/lib']
      - args: ['ln', '-svf', 'usr/sbin', '@THIS_COLLECT_DIR@/sbin']
      # Link /var/run to /run
      - args: ['ln', '-svf', 'var/run', '@THIS_COLLECT_DIR@/run']
      # Create a compatibility symlink for ld.so
      - args: ['ln', '-svf', '/usr/lib/ld.so', '@THIS_COLLECT_DIR@/lib/ld-init.so']

  - name: gcc
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    from_source: gcc
    tools_required:
      - tool: system-gcc
      - host-automake-v1.15
    pkgs_required:
      - mlibc
      - gmp
      - mpfr
      - mpc
      - zlib
    revision: 3
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--with-pkgversion=managarm'
        - '--with-bugurl=https://github.com/managarm/bootstrap-managarm/issues/'
        - '--host=@OPTION:arch-triple@'
        - '--prefix=/usr'
        - '--target=@OPTION:arch-triple@'
        - '--with-sysroot=/'
        - '--with-build-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--enable-initfini-array'
        - '--disable-nls'
        - '--enable-lto'
        - '--with-system-zlib'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    build:
      - args: ['make', 'all-gcc', 'all-target-libgcc', 'all-target-libstdc++-v3', '-j@PARALLELISM@']
      - args: ['make', 'install-gcc', 'install-target-libgcc', 'install-target-libstdc++-v3']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true
      - args: ['ln', '-sf', 'gcc', '@THIS_COLLECT_DIR@/usr/bin/cc']

  # Deprecated in favor of openssl
  - name: libressl
    source:
      subdir: 'ports'
      git: 'https://github.com/libressl-portable/portable.git'
      tag: 'v3.0.2'
      version: '3.0.2'
      regenerate:
        - args: ['./update.sh']
          isolate_network: false
    tools_required:
      - host-cmake
      - system-gcc
    pkgs_required:
      - mlibc
    revision: 9
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DLIBRESSL_APPS=OFF'
        - '-DBUILD_SHARED_LIBS=ON'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: llvm
    labels: [aarch64]
    architecture: '@OPTION:arch@'
    from_source: llvm
    tools_required:
      - host-cmake
      - system-gcc
    pkgs_required:
      - mlibc
      - zlib
    revision: 1
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        # We really have to build LLVM in Release mode.
        # Building it in debug mode produces tens of GiB of debugging info.
        - '-DCMAKE_BUILD_TYPE=Release'
        - '-DLLVM_LINK_LLVM_DYLIB=ON'
        # RTTI affects the ABI. Hence, we enable it.
        - '-DLLVM_ENABLE_RTTI=ON'
        - '-DLLVM_TARGETS_TO_BUILD=X86;AArch64'
        - '-DLLVM_TARGET_ARCH=@OPTION:arch@'
        - '-DLLVM_DEFAULT_TARGET_TRIPLE=@OPTION:arch-triple@'
        - '-DLLVM_HOST_TRIPLE=@OPTION:arch-triple@'
        # Disable linking against ncurses, which we do not build with -fPIC.
        - '-DLLVM_ENABLE_TERMINFO=OFF'
        # Suppress developer warnings
        - '-Wno-dev'
        - '@THIS_SOURCE_DIR@/llvm'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: kmscube
    source:
      rolling_version: true
      version: '0.0pl@ROLLING_ID@'
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/mesa/kmscube.git'
      branch: 'master'
      commit: b235bae4c674b6ef4ac15a40b46000876bee9425
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-pkg-config
      - system-gcc
    pkgs_required:
      - mlibc
      - mesa
    revision: 9
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=@OPTION:arch-triple@'
        - '--prefix=/usr'
        environ:
          CFLAGS: '-O0 -g -Wall -Wextra -std=c99 -fcommon'
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: runit
    stability_level: broken
    source:
      subdir: ports
      url: 'http://smarden.org/runit/runit-2.1.2.tar.gz'
      format: 'tar.gz'
      checksum: blake2b:101e514aeed282685ebe636f401ca6f94d157281d08a3ac487340aebe945b82d2ee01d41e9917446f4ebd7b27fe9fd18ba4ad55739ab1b62a0e59e1c438b55e9
      extract_path: 'admin/runit-2.1.2'
      patch-path-strip: 1
      version: '2.1.2'
    tools_required:
      - system-gcc
    pkgs_required:
      - mlibc
    revision: 5
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
      - args: 'echo @OPTION:arch-triple@-gcc -O2 -Wall > @THIS_BUILD_DIR@/src/conf-cc'
      - args: 'echo @OPTION:arch-triple@-gcc > @THIS_BUILD_DIR@/src/conf-ld'
      - args: 'sed -i s/-static// src/Makefile'
      - args: 'sed -i 1s/utmpset// src/Makefile'
      - args: 'sed -i /utmpset/d package/commands'
    build:
      - args: ['make', '-j@PARALLELISM@', '-C', 'src', 'chkshsgr', 'choose', 'compile', 'hasshsgr.h1', 'hasshsgr.h2', 'load', 'tryshsgr.c', 'warn-shsgr']
      - args: 'cat @THIS_BUILD_DIR@/src/hasshsgr.h1 > @THIS_BUILD_DIR@/src/hasshsgr.h'
      - args: 'cat @THIS_BUILD_DIR@/src/uw_tmp.h1 > @THIS_BUILD_DIR@/src/uw_tmp.h'
      - args: ['make', '-j@PARALLELISM@', '-C', 'src']
      - args: 'install -Dt @THIS_COLLECT_DIR@/bin $(sed s,^,src/, @THIS_BUILD_DIR@/package/commands)'


tasks:
  - name: useful-image-dependencies
    pkgs_required:
      - base
      - weston-desktop
    tools_required:
      - system-gcc
    args: ''

  - name: update-initrd
    pkgs_required:
      - managarm-kernel
      - managarm-system
    tasks_required:
      - task: useful-image-dependencies
        order_only: true
      - task: initialize-empty-image
        order_only: true
    sources_required:
      - managarm
    tools_required:
      - cross-binutils
    args:
      - '@SOURCE_ROOT@/managarm/tools/gen-initrd.py'
      - '--triple'
      - '@OPTION:arch-triple@'
    workdir: '@BUILD_ROOT@'

  - name: initialize-empty-image
    sources_required:
      - image_create
    tools_required:
      - host-limine
    args: |
      if [ "@OPTION:mount-using@" == guestfs ]; then
          elevation=-g # Use libguestfs for root-less image creation.
      fi
      @SOURCE_ROOT@/ports/image_create/image_create.sh \
      -oimage \
      -s4G \
      -pgpt \
      -text2 \
      -llimine \
      -be \
      $elevation
    environ:
      'LIMINE_PATH': '@BUILD_ROOT@/tools/host-limine/share/limine'
      'GPT_TYPE': '64212B3B-56A1-4DFB-971E-BC8CD027996A'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: make-image
    tools_required:
      - host-limine
    pkgs_required:
      - managarm-kernel
      - managarm-system
    tasks_required:
      - update-initrd
    args:
      - '@SOURCE_ROOT@/scripts/update-image.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - '--mount-using'
      - '@OPTION:mount-using@'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: remake-image
    tools_required:
      - host-limine
    pkgs_required:
      - managarm-kernel
      - managarm-system
    tasks_required:
      - update-initrd
    args:
      - '@SOURCE_ROOT@/scripts/update-image.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - 'remake'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: xz-image
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    artifact_files:
      - name: image.xz
        path: '@BUILD_ROOT@'
    args: ['xz', '--fast', '--keep', '@BUILD_ROOT@/image']

  - name: qemu
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/vm-util.py'
      - 'qemu'
      - '--arch'
      - '@OPTION:arch@'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: test-image
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/test-image.py'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: mlibc-docs
    pkgs_required:
      - mlibc-docs
    args:
      - 'python'
      - '-m'
      - 'http.server'
      - '8080'
      - '-d'
      - '@BUILD_ROOT@/pkg-builds/mlibc-docs/docs'
    containerless: true

  - name: mlibc-sysdeps
    args:
      - '@SOURCE_ROOT@/scripts/compile-mlibc-sysdeps.sh'
      - '@SOURCE_ROOT@/mlibc'
      - '@SYSROOT_DIR@/usr/src/linux-headers'
    workdir: '@BUILD_ROOT@'
