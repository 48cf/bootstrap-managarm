From 1495c02fca99bc73538d24321633e831d5bc9f6c Mon Sep 17 00:00:00 2001
From: Dennis Bonke <admin@dennisbonke.com>
Date: Fri, 14 Mar 2025 11:48:48 +0100
Subject: [PATCH 2/2] Add Managarm support and remove unimplemented items in
 systemd unit file

Signed-off-by: Dennis Bonke <admin@dennisbonke.com>
---
 bus/dbus.service.in           |  2 +-
 configure.ac                  |  4 ++--
 dbus/dbus-socket-set-epoll.c  |  2 +-
 dbus/dbus-sysdeps-unix.c      |  4 ++--
 dbus/dbus-sysdeps-util-unix.c | 14 ++++++++++++++
 5 files changed, 20 insertions(+), 6 deletions(-)

diff --git a/bus/dbus.service.in b/bus/dbus.service.in
index ca0b7e9..445ab0e 100644
--- a/bus/dbus.service.in
+++ b/bus/dbus.service.in
@@ -6,4 +6,4 @@ Requires=dbus.socket
 [Service]
 ExecStart=@EXPANDED_BINDIR@/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only
 ExecReload=@EXPANDED_BINDIR@/dbus-send --print-reply --system --type=method_call --dest=org.freedesktop.DBus / org.freedesktop.DBus.ReloadConfig
-OOMScoreAdjust=-900
+#OOMScoreAdjust=-900
diff --git a/configure.ac b/configure.ac
index 3bb9cce..0ad0621 100644
--- a/configure.ac
+++ b/configure.ac
@@ -992,8 +992,8 @@ else
     AC_MSG_CHECKING([for Linux epoll(4)])
     AC_LINK_IFELSE([AC_LANG_PROGRAM(
         [
-        #ifndef __linux__
-        #error This is not Linux
+        #if !defined(__linux__) && !defined(__managarm__)
+        #error This is not Linux or Managarm
         #endif
         #include <sys/epoll.h>
         ],
diff --git a/dbus/dbus-socket-set-epoll.c b/dbus/dbus-socket-set-epoll.c
index 4692cbe..b50e22d 100644
--- a/dbus/dbus-socket-set-epoll.c
+++ b/dbus/dbus-socket-set-epoll.c
@@ -28,7 +28,7 @@
 #include <dbus/dbus-internals.h>
 #include <dbus/dbus-sysdeps.h>
 
-#ifndef __linux__
+#if !defined(__linux__) && !defined(__managarm__)
 # error This file is for Linux epoll(4)
 #endif
 
diff --git a/dbus/dbus-sysdeps-unix.c b/dbus/dbus-sysdeps-unix.c
index 30c5fd8..bde9228 100644
--- a/dbus/dbus-sysdeps-unix.c
+++ b/dbus/dbus-sysdeps-unix.c
@@ -961,7 +961,7 @@ _dbus_connect_unix_socket (const char     *path,
 
   if (abstract)
     {
-#ifdef __linux__
+#if defined(__linux__) || defined(__managarm__)
       addr.sun_path[0] = '\0'; /* this is what says "use abstract" */
       path_len++; /* Account for the extra nul byte added to the start of sun_path */
 
@@ -1163,7 +1163,7 @@ _dbus_listen_unix_socket (const char     *path,
 
   if (abstract)
     {
-#ifdef __linux__
+#if defined(__linux__) || defined(__managarm__)
       /* remember that abstract names aren't nul-terminated so we rely
        * on sun_path being filled in with zeroes above.
        */
diff --git a/dbus/dbus-sysdeps-util-unix.c b/dbus/dbus-sysdeps-util-unix.c
index 26fcb5b..0306a95 100644
--- a/dbus/dbus-sysdeps-util-unix.c
+++ b/dbus/dbus-sysdeps-util-unix.c
@@ -397,10 +397,12 @@ _dbus_rlimit_save_fd_limit (DBusError *error)
 
   if (getrlimit (RLIMIT_NOFILE, &self->lim) < 0)
     {
+#ifndef __managarm__
       dbus_set_error (error, _dbus_error_from_errno (errno),
                       "Failed to get fd limit: %s", _dbus_strerror (errno));
       dbus_free (self);
       return NULL;
+#endif
     }
 
   return self;
@@ -420,7 +422,11 @@ _dbus_rlimit_raise_fd_limit (DBusError *error)
     {
       dbus_set_error (error, _dbus_error_from_errno (errno),
                       "Failed to get fd limit: %s", _dbus_strerror (errno));
+#ifdef __managarm__
+      return TRUE;
+#else
       return FALSE;
+#endif
     }
 
   old = lim;
@@ -460,7 +466,11 @@ _dbus_rlimit_raise_fd_limit (DBusError *error)
                       "Failed to set fd limit to %lu: %s",
                       (unsigned long) lim.rlim_cur,
                       _dbus_strerror (errno));
+#ifdef __managarm__
+      return TRUE;
+#else
       return FALSE;
+#endif
     }
 
   return TRUE;
@@ -475,7 +485,11 @@ _dbus_rlimit_restore_fd_limit (DBusRLimit *saved,
       dbus_set_error (error, _dbus_error_from_errno (errno),
                       "Failed to restore old fd limit: %s",
                       _dbus_strerror (errno));
+#ifdef __managarm__
+      return TRUE;
+#else
       return FALSE;
+#endif
     }
 
   return TRUE;
-- 
2.47.2

