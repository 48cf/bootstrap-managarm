From dbce35f91be8d90ce18c3dc94b0a797626c91b6f Mon Sep 17 00:00:00 2001
From: Alexander van der Grinten <alexander.vandergrinten@gmail.com>
Date: Wed, 29 Jun 2016 09:28:28 +0000
Subject: [PATCH] Managarm target

TODO: Use libtoolize instead of modifying in-tree libtool?
---
 config.sub                   |  3 ++-
 fixincludes/mkfixinc.sh      |  1 +
 gcc/config.gcc               | 23 +++++++++++++++++++++++
 gcc/config/i386/t-managarm64 |  5 +++++
 gcc/config/managarm-kernel.h | 10 ++++++++++
 gcc/config/managarm-system.h | 10 ++++++++++
 gcc/config/managarm.h        | 25 +++++++++++++++++++++++++
 libgcc/config.host           |  8 ++++++++
 libstdc++-v3/crossconfig.m4  |  6 ++++++
 libtool.m4                   | 14 ++++++++++++++
 10 files changed, 104 insertions(+), 1 deletion(-)
 create mode 100644 gcc/config/i386/t-managarm64
 create mode 100644 gcc/config/managarm-kernel.h
 create mode 100644 gcc/config/managarm-system.h
 create mode 100644 gcc/config/managarm.h

diff --git a/config.sub b/config.sub
index da6d1b6..e24b02e 100755
--- a/config.sub
+++ b/config.sub
@@ -116,6 +116,7 @@ maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
 case $maybe_os in
   nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \
   linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
+  managarm-kernel* | managarm-system* | \
   knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \
   kopensolaris*-gnu* | \
   storm-chaos* | os2-emx* | rtmk-nova*)
@@ -1399,7 +1400,7 @@ case $os in
 	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
 	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
 	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \
-	      | -onefs* | -tirtos*)
+	      | -onefs* | -tirtos* | -managarm-kernel* | -managarm-system* )
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
 	-qnx*)
diff --git a/fixincludes/mkfixinc.sh b/fixincludes/mkfixinc.sh
index 0d96c8c..0c4e21c 100755
--- a/fixincludes/mkfixinc.sh
+++ b/fixincludes/mkfixinc.sh
@@ -12,6 +12,7 @@ target=fixinc.sh
 # Check for special fix rules for particular targets
 case $machine in
     i?86-*-cygwin* | \
+    x86_64-*-managarm* | \
     i?86-*-mingw32* | \
     x86_64-*-mingw32* | \
     i?86-*-interix* | \
diff --git a/gcc/config.gcc b/gcc/config.gcc
index f66e48c..c206613 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -768,6 +768,13 @@ case ${target} in
   tmake_file="${tmake_file} t-glibc"
   target_has_targetcm=yes
   ;;
+*-*-managarm*)
+  gas=yes
+  gnu_ld=yes
+  default_use_cxa_atexit=yes
+  use_gcc_stdint=wrap
+  tmake_file="${tmake_file} t-slibgcc"
+  ;;
 *-*-netbsd*)
   tmake_file="t-slibgcc"
   gas=yes
@@ -1594,6 +1601,22 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)
 	done
 	TM_MULTILIB_CONFIG=`echo $TM_MULTILIB_CONFIG | sed 's/^,//'`
 	;;
+x86_64-*-managarm*)
+	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h gnu-user.h glibc-stdint.h \
+		 i386/x86-64.h i386/gnu-user-common.h i386/gnu-user64.h managarm.h"
+	
+	case ${target} in
+	*-managarm-system*)
+		tm_file="${tm_file} managarm-system.h" ;;
+	*-managarm-kernel*)
+		tm_file="${tm_file} managarm-kernel.h" ;;
+	*)
+		echo "managarm target '${target}' not supported."
+		exit 1
+	esac
+
+	tmake_file="${tmake_file} i386/t-managarm64"
+	;;
 i[34567]86-pc-msdosdjgpp*)
 	xm_file=i386/xm-djgpp.h
 	tm_file="dbxcoff.h ${tm_file} i386/unix.h i386/bsd.h i386/gas.h i386/djgpp.h i386/djgpp-stdint.h"
diff --git a/gcc/config/i386/t-managarm64 b/gcc/config/i386/t-managarm64
new file mode 100644
index 0000000..0182d6a
--- /dev/null
+++ b/gcc/config/i386/t-managarm64
@@ -0,0 +1,5 @@
+
+MULTILIB_OPTIONS = m64/m32
+MULTILIB_DIRNAMES = fizz buzz
+MULTILIB_OSDIRNAMES = foo:x86_64-managarm bar:i386-managarm
+
diff --git a/gcc/config/managarm-kernel.h b/gcc/config/managarm-kernel.h
new file mode 100644
index 0000000..62bce67
--- /dev/null
+++ b/gcc/config/managarm-kernel.h
@@ -0,0 +1,10 @@
+
+#undef LIB_SPEC
+#define LIB_SPEC ""
+
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "crti.o%s %{shared:crtbeginS.o%s;:crtbegin.o%s}"
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "%{shared:crtendS.o%s;:crtend.o%s} crtn.o%s"
+
diff --git a/gcc/config/managarm-system.h b/gcc/config/managarm-system.h
new file mode 100644
index 0000000..d0b424e
--- /dev/null
+++ b/gcc/config/managarm-system.h
@@ -0,0 +1,10 @@
+
+#undef LIB_SPEC
+#define LIB_SPEC "-lc -lm"
+
+#undef STARTFILE_SPEC
+#define STARTFILE_SPEC "%{!shared:crt0.o%s} crti.o%s %{shared:crtbeginS.o%s;:crtbegin.o%s}"
+
+#undef ENDFILE_SPEC
+#define ENDFILE_SPEC "%{shared:crtendS.o%s;:crtend.o%s} crtn.o%s"
+
diff --git a/gcc/config/managarm.h b/gcc/config/managarm.h
new file mode 100644
index 0000000..8d4aff6
--- /dev/null
+++ b/gcc/config/managarm.h
@@ -0,0 +1,25 @@
+
+#undef TARGET_MANAGARM
+#define TARGET_MANAGARM 1
+
+#undef  NO_IMPLICIT_EXTERN_C
+#define NO_IMPLICIT_EXTERN_C 1
+
+#define GNU_USER_LINK_EMULATION32 "elf_i386"
+#define GNU_USER_LINK_EMULATION64 "elf_x86_64"
+#define GNU_USER_LINK_EMULATIONX32 "elf32_x86_64"
+
+#define GNU_USER_DYNAMIC_LINKER32 "ld-init-32.so"
+#define GNU_USER_DYNAMIC_LINKER64 "ld-init-64.so"
+#define GNU_USER_DYNAMIC_LINKERX32 "ld-init-x32.so"
+
+#undef TARGET_OS_CPP_BUILTINS
+#define TARGET_OS_CPP_BUILTINS() \
+	do {                                \
+		builtin_define ("__managarm__");      \
+		builtin_define ("__unix__");      \
+		builtin_assert ("system=managarm");   \
+		builtin_assert ("system=unix");   \
+		builtin_assert ("system=posix");   \
+	} while(0);
+
diff --git a/libgcc/config.host b/libgcc/config.host
index b61a579..2656cba 100644
--- a/libgcc/config.host
+++ b/libgcc/config.host
@@ -237,6 +237,11 @@ case ${host} in
     extra_parts="$extra_parts vtv_start.o vtv_end.o vtv_start_preinit.o vtv_end_preinit.o"
   fi
   ;;
+*-*-managarm*)
+	extra_parts="$extra_parts crti.o crtbegin.o crtbeginS.o crtend.o crtendS.o crtn.o"
+	tmake_file="$tmake_file t-crtstuff-pic"
+	tmake_file="$tmake_file t-slibgcc t-slibgcc-gld t-slibgcc-elf-ver t-libgcc-pic"
+	;;
 *-*-lynxos*)
   tmake_file="$tmake_file t-lynx $cpu_type/t-crtstuff t-crtstuff-pic t-libgcc-pic"
   extra_parts="crtbegin.o crtbeginS.o crtend.o crtendS.o"
@@ -624,6 +629,9 @@ x86_64-*-linux*)
 	tm_file="${tm_file} i386/elf-lib.h"
 	md_unwind_header=i386/linux-unwind.h
 	;;
+x86_64-*-managarm*)
+	tmake_file="$tmake_file i386/t-crtstuff"
+	;;
 x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)
 	extra_parts="$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o"
 	tmake_file="${tmake_file} i386/t-crtpc t-crtfm i386/t-crtstuff t-dfprules"
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index ece1256..1f7bc4f 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -159,6 +159,12 @@ case "${host}" in
     AC_CHECK_FUNCS(__cxa_thread_atexit_impl)
     AM_ICONV
     ;;
+  *-managarm*)
+    GLIBCXX_CHECK_COMPILER_FEATURES
+    GLIBCXX_CHECK_LINKER_FEATURES
+    GLIBCXX_CHECK_MATH_SUPPORT
+    GLIBCXX_CHECK_STDLIB_SUPPORT
+    ;;
   *-mingw32*)
     GLIBCXX_CHECK_LINKER_FEATURES
     GLIBCXX_CHECK_MATH_SUPPORT
diff --git a/libtool.m4 b/libtool.m4
index 24d13f3..fb4ff19 100644
--- a/libtool.m4
+++ b/libtool.m4
@@ -2494,6 +2494,16 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu)
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
+managarm*)
+  version_type=linux
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
+  soname_spec='${libname}${release}${shared_ext}$major'
+  shlibpath_var=LD_LIBRARY_PATH
+  hardcode_into_libs=yes
+  ;;
+
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
@@ -3093,6 +3103,10 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
+managarm*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
+
 netbsd*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[[^/]]+(\.so\.[[0-9]]+\.[[0-9]]+|_pic\.a)$'
-- 
2.1.4

