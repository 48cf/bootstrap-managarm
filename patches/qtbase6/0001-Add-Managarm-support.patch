From 746b6ca08c9ed100b6fe27f1791e62ba1ea17f29 Mon Sep 17 00:00:00 2001
From: Dennis Bonke <admin@dennisbonke.com>
Date: Tue, 13 Feb 2024 04:48:28 +0100
Subject: [PATCH] Add Managarm support

Signed-off-by: Dennis Bonke <admin@dennisbonke.com>
---
 cmake/QtBuild.cmake                           | 6 ++++++
 cmake/QtPlatformSupport.cmake                 | 1 +
 mkspecs/common/posix/qplatformdefs.h          | 4 ++--
 src/corelib/global/qsystemdetection.h         | 2 ++
 src/corelib/io/qstorageinfo_unix.cpp          | 3 +++
 src/corelib/thread/qthread_unix.cpp           | 2 +-
 src/gui/configure.cmake                       | 4 ++--
 src/network/kernel/qnetworkinterface_unix.cpp | 4 ++++
 8 files changed, 21 insertions(+), 5 deletions(-)

diff --git a/cmake/QtBuild.cmake b/cmake/QtBuild.cmake
index 1dc576d2..bbf77cd3 100644
--- a/cmake/QtBuild.cmake
+++ b/cmake/QtBuild.cmake
@@ -307,6 +307,12 @@ elseif(LINUX)
     elseif(CLANG)
         set(QT_DEFAULT_MKSPEC linux-clang)
     endif()
+elseif(MANAGARM)
+    if(GCC)
+        set(QT_DEFAULT_MKSPEC managarm-g++)
+    else()
+        message(FATAL_ERROR "Unknown compiler in use!")
+    endif()
 elseif(ANDROID)
     if(GCC)
         set(QT_DEFAULT_MKSPEC android-g++)
diff --git a/cmake/QtPlatformSupport.cmake b/cmake/QtPlatformSupport.cmake
index e20a5e15..8d01b2df 100644
--- a/cmake/QtPlatformSupport.cmake
+++ b/cmake/QtPlatformSupport.cmake
@@ -10,6 +10,7 @@ function(qt_set01 result)
 endfunction()
 
 qt_set01(LINUX CMAKE_SYSTEM_NAME STREQUAL "Linux")
+qt_set01(MANAGARM CMAKE_SYSTEM_NAME STREQUAL "managarm")
 qt_set01(HPUX CMAKE_SYSTEM_NAME STREQUAL "HPUX")
 qt_set01(ANDROID CMAKE_SYSTEM_NAME STREQUAL "Android")  # FIXME: How to identify this?
 qt_set01(INTEGRITY CMAKE_SYSTEM_NAME STREQUAL "Integrity") # FIXME: How to identify this?
diff --git a/mkspecs/common/posix/qplatformdefs.h b/mkspecs/common/posix/qplatformdefs.h
index ffae2ac3..3196f1b1 100644
--- a/mkspecs/common/posix/qplatformdefs.h
+++ b/mkspecs/common/posix/qplatformdefs.h
@@ -12,7 +12,7 @@
 #endif
 #include <sys/stat.h>
 
-#if defined(QT_USE_XOPEN_LFS_EXTENSIONS) && defined(QT_LARGEFILE_SUPPORT)
+#if defined(QT_USE_XOPEN_LFS_EXTENSIONS) && defined(QT_LARGEFILE_SUPPORT) && !defined(__managarm__)
 
 #define QT_STATBUF              struct stat64
 #define QT_FPOS_T               fpos64_t
@@ -105,7 +105,7 @@
 
 #if defined(QT_LARGEFILE_SUPPORT) \
         && defined(QT_USE_XOPEN_LFS_EXTENSIONS) \
-        && !defined(QT_NO_READDIR64)
+        && !defined(QT_NO_READDIR64) && !defined(__managarm__)
 #define QT_DIRENT               struct dirent64
 #define QT_READDIR              ::readdir64
 #define QT_READDIR_R            ::readdir64_r
diff --git a/src/corelib/global/qsystemdetection.h b/src/corelib/global/qsystemdetection.h
index 51881043..07ea4fe7 100644
--- a/src/corelib/global/qsystemdetection.h
+++ b/src/corelib/global/qsystemdetection.h
@@ -126,6 +126,8 @@
 #  define Q_OS_VXWORKS
 #elif defined(__HAIKU__)
 #  define Q_OS_HAIKU
+#elif defined(__managarm__)
+#  define Q_OS_MANAGARM
 #elif defined(__MAKEDEPEND__)
 #else
 #  error "Qt has not been ported to this OS - see http://www.qt-project.org/"
diff --git a/src/corelib/io/qstorageinfo_unix.cpp b/src/corelib/io/qstorageinfo_unix.cpp
index 20bddd87..75b2a81c 100644
--- a/src/corelib/io/qstorageinfo_unix.cpp
+++ b/src/corelib/io/qstorageinfo_unix.cpp
@@ -64,6 +64,9 @@
 #elif defined(Q_OS_HAIKU)
 #  define QT_STATFSBUF struct statvfs
 #  define QT_STATFS    ::statvfs
+#elif defined(Q_OS_MANAGARM)
+#  define QT_STATFSBUF struct statvfs
+#  define QT_STATFS    ::statvfs
 #else
 #  if defined(QT_LARGEFILE_SUPPORT)
 #    define QT_STATFSBUF struct statvfs64
diff --git a/src/corelib/thread/qthread_unix.cpp b/src/corelib/thread/qthread_unix.cpp
index dee71305..5af632a8 100644
--- a/src/corelib/thread/qthread_unix.cpp
+++ b/src/corelib/thread/qthread_unix.cpp
@@ -689,7 +689,7 @@ void QThread::start(Priority priority)
 
 
     if (d->stackSize > 0) {
-#if defined(_POSIX_THREAD_ATTR_STACKSIZE) && (_POSIX_THREAD_ATTR_STACKSIZE-0 > 0)
+#if defined(_POSIX_THREAD_ATTR_STACKSIZE) && (_POSIX_THREAD_ATTR_STACKSIZE-0 > 0) || defined(__managarm__)
         int code = pthread_attr_setstacksize(&attr, d->stackSize);
 #else
         int code = ENOSYS; // stack size not supported, automatically fail
diff --git a/src/gui/configure.cmake b/src/gui/configure.cmake
index 222073ad..5fecb185 100644
--- a/src/gui/configure.cmake
+++ b/src/gui/configure.cmake
@@ -29,7 +29,7 @@ set_property(CACHE INPUT_libpng PROPERTY STRINGS undefined no qt system)
 
 #### Libraries
 qt_set01(X11_SUPPORTED LINUX OR HPUX OR FREEBSD OR NETBSD OR OPENBSD OR SOLARIS OR
-    HURD)
+    HURD OR MANAGARM)
 qt_find_package(ATSPI2 PROVIDED_TARGETS PkgConfig::ATSPI2 MODULE_NAME gui QMAKE_LIB atspi)
 qt_find_package(DirectFB PROVIDED_TARGETS PkgConfig::DirectFB MODULE_NAME gui QMAKE_LIB directfb)
 qt_find_package(Libdrm PROVIDED_TARGETS Libdrm::Libdrm MODULE_NAME gui QMAKE_LIB drm)
@@ -60,7 +60,7 @@ qt_find_package(GLESv2 PROVIDED_TARGETS GLESv2::GLESv2 MODULE_NAME gui QMAKE_LIB
 qt_find_package(Tslib PROVIDED_TARGETS PkgConfig::Tslib MODULE_NAME gui QMAKE_LIB tslib)
 qt_find_package(WrapVulkanHeaders PROVIDED_TARGETS WrapVulkanHeaders::WrapVulkanHeaders
     MODULE_NAME gui QMAKE_LIB vulkan MARK_OPTIONAL)
-if((LINUX) OR QT_FIND_ALL_PACKAGES_ALWAYS)
+if((LINUX OR MANAGARM) OR QT_FIND_ALL_PACKAGES_ALWAYS)
     qt_find_package(Wayland PROVIDED_TARGETS Wayland::Server MODULE_NAME gui QMAKE_LIB wayland_server)
 endif()
 if((X11_SUPPORTED) OR QT_FIND_ALL_PACKAGES_ALWAYS)
diff --git a/src/network/kernel/qnetworkinterface_unix.cpp b/src/network/kernel/qnetworkinterface_unix.cpp
index 082d83e9..49c5a8de 100644
--- a/src/network/kernel/qnetworkinterface_unix.cpp
+++ b/src/network/kernel/qnetworkinterface_unix.cpp
@@ -25,6 +25,10 @@
 # include <ifaddrs.h>
 #endif
 
+#ifdef Q_OS_MANAGARM
+# include <linux/sockios.h>
+#endif
+
 #ifdef QT_LINUXBASE
 #  include <arpa/inet.h>
 #  ifndef SIOCGIFBRDADDR
-- 
2.43.0

