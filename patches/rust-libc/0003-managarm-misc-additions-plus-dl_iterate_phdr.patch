From b4efb1f225a032f47117f93c203d79fe14e13793 Mon Sep 17 00:00:00 2001
From: Matt Taylor <mstaveleytaylor@gmail.com>
Date: Mon, 14 Feb 2022 01:29:54 +0000
Subject: [PATCH 3/4] managarm: misc additions plus dl_iterate_phdr

---
 src/unix/mlibc/mod.rs | 194 +++++++++++++++++++++++++++++++++++-------
 1 file changed, 165 insertions(+), 29 deletions(-)

diff --git a/src/unix/mlibc/mod.rs b/src/unix/mlibc/mod.rs
index f374aa1..cd7e4dd 100644
--- a/src/unix/mlibc/mod.rs
+++ b/src/unix/mlibc/mod.rs
@@ -19,7 +19,7 @@ pub type socklen_t = ::c_ulong;
 // options/internal/include/bits/off_t.h
 pub type off_t = ::c_long;
 
-// abis/mlibc/vm-flags.h 
+// abis/mlibc/vm-flags.h
 pub const MAP_ANON: ::c_int = 8;
 pub const MAP_PRIVATE: ::c_int = 1;
 pub const MAP_SHARED: ::c_int = 2;
@@ -61,6 +61,12 @@ pub type time_t = ::c_long;
 // options/posix/include/bits/posix/suseconds_t.h
 pub type suseconds_t = ::c_long;
 
+// abis/mlibc/uid_t.h
+pub type uid_t = ::c_uint;
+
+// abis/mlibc/gid_t.h
+pub type gid_t = ::c_uint;
+
 // abis/mlibc/dev_t.h
 pub type dev_t = ::c_ulong;
 
@@ -71,17 +77,61 @@ pub type fsblkcnt_t = ::c_uint;
 pub type fsfilcnt_t = ::c_uint;
 
 // abis/mlibc/signal.h
+pub const SIGHUP: ::c_int = 1;
+pub const SIGINT: ::c_int = 2;
+pub const SIGQUIT: ::c_int = 3;
+pub const SIGILL: ::c_int = 4;
+pub const SIGTRAP: ::c_int = 5;
+pub const SIGABRT: ::c_int = 6;
+pub const SIGBUS: ::c_int = 7;
+pub const SIGFPE: ::c_int = 8;
 pub const SIGKILL: ::c_int = 9;
+pub const SIGUSR1: ::c_int = 10;
+pub const SIGSEGV: ::c_int = 11;
+pub const SIGUSR2: ::c_int = 12;
 pub const SIGPIPE: ::c_int = 13;
+pub const SIGALRM: ::c_int = 14;
+pub const SIGTERM: ::c_int = 15;
+pub const SIGSTKFLT: ::c_int = 16;
+pub const SIGCHLD: ::c_int = 17;
+pub const SIGCONT: ::c_int = 18;
+pub const SIGSTOP: ::c_int = 19;
+pub const SIGTSTP: ::c_int = 20;
+pub const SIGTTIN: ::c_int = 21;
+pub const SIGTTOU: ::c_int = 22;
+pub const SIGURG: ::c_int = 23;
+pub const SIGXCPU: ::c_int = 24;
+pub const SIGXFSZ: ::c_int = 25;
+pub const SIGVTALRM: ::c_int = 26;
+pub const SIGPROF: ::c_int = 27;
+pub const SIGWINCH: ::c_int = 28;
+pub const SIGIO: ::c_int = 29;
+pub const SIGPOLL: ::c_int = SIGIO;
+pub const SIGPWR: ::c_int = 30;
+pub const SIGSYS: ::c_int = 31;
+pub const SIGRTMIN: ::c_int = 32;
+pub const SIGRTMAX: ::c_int = 33;
+pub const SIGCANCEL: ::c_int = 34;
+
 pub const SIG_SETMASK: ::c_int = 3;
+
+
+pub const SA_NOCLDSTOP: ::c_int = 1 << 0;
+pub const SA_ONSTACK: ::c_int = 1 << 1;
+pub const SA_RESETHAND: ::c_int = 1 << 2;
+pub const SA_RESTART: ::c_int = 1 << 3;
+pub const SA_SIGINFO: ::c_int = 1 << 4;
+pub const SA_NOCLDWAIT: ::c_int = 1 << 5;
+pub const SA_NODEFER: ::c_int = 1 << 6;
+
 pub type sigset_t = ::c_long;
 s! {
     pub struct siginfo_t {
         pub si_signo: ::c_int,
         pub si_code: ::c_int,
         pub si_errno: ::c_int,
-        pub si_pid: ::pid_t,
-        pub si_uid: ::uid_t,
+        pub si_pid: pid_t,
+        pub si_uid: uid_t,
         pub si_addr: *mut ::c_void,
         pub si_status: ::c_int,
         pub si_value: sigval,
@@ -93,9 +143,8 @@ s! {
         pub sa_sigaction: ::Option<extern fn(::c_int, *mut siginfo_t, *mut ::c_void)>,
     }
 }
-s_no_extra_traits! {
-    pub union sigval {
-        pub sival_int: ::c_int,
+s! {
+    pub struct sigval {
         pub sival_ptr: *mut ::c_void,
     }
 }
@@ -120,6 +169,13 @@ s! {
 // options/posix/include/termios.h
 pub const TIOCGWINSZ: ::c_ulong = 0x5413;
 
+pub const CSTOPB: ::c_int = 0x0004;
+pub const CREAD: ::c_int = 0x0008;
+pub const PARENB: ::c_int = 0x0010;
+pub const PARODD: ::c_int = 0x0020;
+pub const HUPCL: ::c_int = 0x0040;
+pub const CLOCAL: ::c_int = 0x0080;
+
 // abis/mlibc/ino_t.h
 pub type ino_t = ::c_long;
 
@@ -132,6 +188,9 @@ pub type blkcnt_t = ::c_long;
 // abis/mlibc/nlink_t.h
 pub type nlink_t = ::c_int;
 
+// abis/mlibc/pid_t.h
+pub type pid_t = ::c_int;
+
 // options/posix/include/bits/posix/in_addr_t.h
 pub type in_addr_t = u32;
 
@@ -176,11 +235,29 @@ pub const SHUT_WR: ::c_int = 3;
 pub const SOCK_DGRAM: ::c_int = 1;
 pub const SOCK_STREAM: ::c_int = 4;
 pub const SOL_SOCKET: ::c_int = 1;
-pub const SO_BROADCAST: ::c_int = 6;
+
+pub const SO_ACCEPTCONN: ::c_int = 1;
+pub const SO_BROADCAST: ::c_int = 2;
+pub const SO_DEBUG: ::c_int = 3;
+pub const SO_DONTROUTE: ::c_int = 4;
 pub const SO_ERROR: ::c_int = 5;
+pub const SO_KEEPALIVE: ::c_int = 6;
+pub const SO_LINGER: ::c_int = 7;
+pub const SO_OOBINLINE: ::c_int = 8;
+pub const SO_RCVBUF: ::c_int = 9;
+pub const SO_RCVLOWAT: ::c_int = 10;
 pub const SO_RCVTIMEO: ::c_int = 11;
 pub const SO_REUSEADDR: ::c_int = 12;
+pub const SO_SNDBUF: ::c_int = 13;
+pub const SO_SNDLOWAT: ::c_int = 14;
 pub const SO_SNDTIMEO: ::c_int = 15;
+pub const SO_TYPE: ::c_int = 16;
+pub const SO_SNDBUFFORCE: ::c_int = 17;
+pub const SO_PEERCRED: ::c_int = 18;
+pub const SO_ATTACH_FILTER: ::c_int = 19;
+pub const SO_PASSCRED: ::c_int = 20;
+pub const SO_RCVBUFFORCE: ::c_int = 21;
+
 pub type sa_family_t = ::c_uint;
 s! {
     pub struct sockaddr_storage {
@@ -190,27 +267,47 @@ s! {
 }
 
 // abis/mlibc/errno.h
+pub const E2BIG: ::c_int = 1001;
 pub const EACCES: ::c_int = 1002;
 pub const EADDRINUSE: ::c_int = 1003;
 pub const EADDRNOTAVAIL: ::c_int = 1004;
 pub const EAGAIN: ::c_int = 1006;
 pub const EBADF: ::c_int = 1008;
+pub const EBUSY: ::c_int = 1010;
 pub const ECONNABORTED: ::c_int = 1013;
 pub const ECONNREFUSED: ::c_int = 1014;
 pub const ECONNRESET: ::c_int = 1015;
 pub const EDEADLK: ::c_int = 1016;
+pub const EDQUOT: ::c_int = 1018;
 pub const EEXIST: ::c_int = 1019;
+pub const EFBIG: ::c_int = 1021;
+pub const EHOSTUNREACH: ::c_int = 1022;
 pub const EINPROGRESS: ::c_int = 1024;
 pub const EINTR: ::c_int = 1025;
 pub const EINVAL: ::c_int = 1026;
+pub const EISDIR: ::c_int = 1029;
+pub const ELOOP: ::c_int = 1030;
+pub const EMLINK: ::c_int = 1032;
+pub const ENAMETOOLONG: ::c_int = 1036;
+pub const ENETDOWN: ::c_int = 1037;
+pub const ENETUNREACH: ::c_int = 1039;
 pub const ENOENT: ::c_int = 1043;
+pub const ENOMEM: ::c_int = 1047;
+pub const ENOSPC: ::c_int = 1050;
 pub const ENOSYS: ::c_int = 1051;
 pub const ENOTCONN: ::c_int = 1052;
+pub const ENOTDIR: ::c_int = 1053;
+pub const ENOTEMPTY: ::c_int = 1054;
 pub const EPERM: ::c_int = 1063;
 pub const EPIPE: ::c_int = 1064;
 pub const ERANGE: ::c_int = 3;
+pub const EROFS: ::c_int = 1068;
+pub const ESPIPE: ::c_int = 1069;
+pub const ESTALE: ::c_int = 1071;
 pub const ETIMEDOUT: ::c_int = 1072;
+pub const ETXTBSY: ::c_int = 1073;
 pub const EWOULDBLOCK: ::c_int = EAGAIN;
+pub const EXDEV: ::c_int = 1075;
 
 // options/posix/include/fcntl.h
 pub const AT_FDCWD: ::c_int = -100;
@@ -259,22 +356,22 @@ pub const S_IXOTH: mode_t = 0o1;
 pub const S_IXUSR: mode_t = 0o100;
 s! {
     pub struct stat {
-        pub st_dev: ::dev_t,
-        pub st_ino: ::ino_t,
-        pub st_mode: ::mode_t,
-        pub st_nlink: ::nlink_t,
-        pub st_uid: ::uid_t,
-        pub st_gid: ::gid_t,
-        pub st_rdev: ::dev_t,
-        pub st_size: ::off_t,
-        pub st_atime: ::time_t,
-        pub st_atime_nsec: ::c_long,
-        pub st_mtime: ::time_t,
-        pub st_mtime_nsec: ::c_long,
-        pub st_ctime: ::time_t,
-        pub st_ctime_nsec: ::c_long,
-        pub st_blksize: ::blksize_t,
-        pub st_blocks: ::blkcnt_t,
+        pub st_dev: dev_t,
+        pub st_ino: ino_t,
+        pub st_mode: mode_t,
+        pub st_nlink: nlink_t,
+        pub st_uid: uid_t,
+        pub st_gid: gid_t,
+        pub st_rdev: dev_t,
+        pub st_size: off_t,
+        pub st_atime: time_t,
+        pub st_atime_nsec: c_long,
+        pub st_mtime: time_t,
+        pub st_mtime_nsec: c_long,
+        pub st_ctime: time_t,
+        pub st_ctime_nsec: c_long,
+        pub st_blksize: blksize_t,
+        pub st_blocks: blkcnt_t,
     }
 }
 
@@ -323,13 +420,43 @@ pub const FIONBIO: ::c_ulong = 0x5421;
 // options/ansi/include/limits.h
 pub const PTHREAD_STACK_MIN: ::size_t = 16384;
 
+// options/elf/include/link.h
+pub type Elf64_Half = u16;
+pub type Elf64_Word = u32;
+pub type Elf64_Off = u64;
+pub type Elf64_Addr = u64;
+pub type Elf64_Xword = u64;
+s! {
+    pub struct dl_phdr_info {
+        pub dlpi_addr: Elf64_Addr,
+        pub dlpi_name: *const ::c_char,
+        pub dlpi_phdr: *const Elf64_Phdr,
+        pub dlpi_phnum: Elf64_Half,
+        pub dlpi_adds: ::c_ulonglong,
+        pub dlpi_subs: ::c_ulonglong,
+        pub dlpi_tls_modid: ::size_t,
+        pub dlpi_tls_data: *mut ::c_void,
+    }
+
+    pub struct Elf64_Phdr {
+        pub p_type: Elf64_Word,
+        pub p_flags: Elf64_Word,
+        pub p_offset: Elf64_Off,
+        pub p_vaddr: Elf64_Addr,
+        pub p_paddr: Elf64_Addr,
+        pub p_filesz: Elf64_Xword,
+        pub p_memsz: Elf64_Xword,
+        pub p_align: Elf64_Xword,
+    }
+}
+
 // options/posix/include/pwd.h
 s! {
     pub struct passwd {
         pub pw_name: *mut ::c_char,
         pub pw_passwd: *mut ::c_char,
-        pub pw_uid: ::uid_t,
-        pub pw_gid: ::gid_t,
+        pub pw_uid: uid_t,
+        pub pw_gid: gid_t,
         pub pw_gecos: *mut ::c_char,
         pub pw_dir: *mut ::c_char,
         pub pw_shell: *mut ::c_char,
@@ -522,9 +649,8 @@ s! {
 }
 
 // options/posix/include/bits/posix/fd_set.h
-s_no_extra_traits! {
-    pub union fd_set {
-        pub __mlibc_elems: [c_char; 128],
+s! {
+    pub struct fd_set {
         pub fds_bits: [c_char; 128],
     }
 }
@@ -533,6 +659,16 @@ extern "C" {
     pub fn bind(socket: ::c_int, address: *const ::sockaddr, address_len: ::socklen_t) -> ::c_int;
     pub fn clock_gettime(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;
     pub fn clock_settime(clk_id: clockid_t, tp: *const ::timespec) -> ::c_int;
+    pub fn dl_iterate_phdr(
+        callback: ::Option<
+            unsafe extern "C" fn(
+                info: *mut ::dl_phdr_info,
+                size: ::size_t,
+                data: *mut ::c_void,
+            ) -> ::c_int,
+        >,
+        data: *mut ::c_void,
+    ) -> ::c_int;
     pub fn endpwent();
     pub fn getpwent() -> *mut passwd;
     pub fn getgrgid_r(
@@ -563,7 +699,7 @@ extern "C" {
         result: *mut *mut passwd,
     ) -> ::c_int;
     pub fn getpwuid_r(
-        uid: ::uid_t,
+        uid: uid_t,
         pwd: *mut passwd,
         buf: *mut ::c_char,
         buflen: ::size_t,
-- 
2.35.1

