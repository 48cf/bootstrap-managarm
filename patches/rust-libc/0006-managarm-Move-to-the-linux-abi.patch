From 4bc5f7342f1f42c6f3b868694b8dd7c896ec5f08 Mon Sep 17 00:00:00 2001
From: Dennis Bonke <admin@dennisbonke.com>
Date: Fri, 1 Sep 2023 16:21:46 +0200
Subject: [PATCH 6/6] managarm: Move to the linux abi

Signed-off-by: Dennis Bonke <admin@dennisbonke.com>
---
 src/unix/mlibc/mod.rs | 408 ++++++++++++++++++++++--------------------
 1 file changed, 215 insertions(+), 193 deletions(-)

diff --git a/src/unix/mlibc/mod.rs b/src/unix/mlibc/mod.rs
index 95c8ac7..638dba0 100644
--- a/src/unix/mlibc/mod.rs
+++ b/src/unix/mlibc/mod.rs
@@ -8,13 +8,13 @@ pub type c_ulong = u64;
 pub type wchar_t = ::c_int;
 
 // options/posix/include/sys/resource.h
-pub const RLIMIT_CORE: ::c_int = 1;
-pub const RLIMIT_CPU: ::c_int = 2;
-pub const RLIMIT_DATA: ::c_int = 3;
-pub const RLIMIT_FSIZE: ::c_int = 4;
-pub const RLIMIT_NOFILE: ::c_int = 5;
-pub const RLIMIT_STACK: ::c_int = 6;
-pub const RLIMIT_AS: ::c_int = 7;
+pub const RLIMIT_CORE: ::c_int = 4;
+pub const RLIMIT_CPU: ::c_int = 0;
+pub const RLIMIT_DATA: ::c_int = 2;
+pub const RLIMIT_FSIZE: ::c_int = 1;
+pub const RLIMIT_NOFILE: ::c_int = 7;
+pub const RLIMIT_STACK: ::c_int = 3;
+pub const RLIMIT_AS: ::c_int = 9;
 pub type rlim_t = ::c_ulong;
 
 s! {
@@ -24,8 +24,8 @@ s! {
     }
 }
 
-// abis/mlibc/mode_t.h
-pub type mode_t = ::c_int;
+// abis/linux/mode_t.h
+pub type mode_t = ::c_uint;
 
 // options/posix/include/bits/posix/socklen_t.h
 pub type socklen_t = ::c_ulong;
@@ -33,32 +33,32 @@ pub type socklen_t = ::c_ulong;
 // options/internal/include/bits/off_t.h
 pub type off_t = ::c_long;
 
-// abis/mlibc/vm-flags.h
-pub const MAP_ANON: ::c_int = 8;
+// abis/linux/vm-flags.h
+pub const MAP_ANON: ::c_int = 0x20;
 pub const MAP_ANONYMOUS: ::c_int = MAP_ANON;
-pub const MAP_PRIVATE: ::c_int = 1;
-pub const MAP_SHARED: ::c_int = 2;
-pub const PROT_EXEC: ::c_int = 4;
-pub const PROT_READ: ::c_int = 1;
-pub const PROT_WRITE: ::c_int = 2;
-pub const PROT_NONE: ::c_int = 0;
-pub const MAP_FIXED: ::c_int = 2;
-pub const MAP_NORESERVE: ::c_int = 0x10;
+pub const MAP_PRIVATE: ::c_int = 0x2;
+pub const MAP_SHARED: ::c_int = 0x1;
+pub const PROT_EXEC: ::c_int = 0x4;
+pub const PROT_READ: ::c_int = 0x1;
+pub const PROT_WRITE: ::c_int = 0x2;
+pub const PROT_NONE: ::c_int = 0x0;
+pub const MAP_FIXED: ::c_int = 0x10;
+pub const MAP_NORESERVE: ::c_int = 0x4000;
 
 // options/posix/include/sys/mman.h
-pub const MAP_FILE : ::c_int = 0;
+pub const MAP_FILE : ::c_int = 0x0;
 pub const MAP_FAILED: *mut ::c_void = usize::MAX as *mut ::c_void;
-pub const MS_ASYNC: ::c_int = 1;
-pub const MS_SYNC: ::c_int = 2;
-pub const MADV_NORMAL: ::c_int = 0;
-pub const MADV_RANDOM: ::c_int = 1;
-pub const MADV_SEQUENTIAL: ::c_int = 2;
-pub const MADV_WILLNEED: ::c_int = 3;
-pub const MADV_DONTNEED: ::c_int = 4;
-pub const MADV_FREE: ::c_int = 8;
-pub const MS_INVALIDATE: ::c_int = 4;
-pub const MCL_CURRENT: ::c_int = 1;
-pub const MCL_FUTURE: ::c_int = 2;
+pub const MS_ASYNC: ::c_int = 0x1;
+pub const MS_SYNC: ::c_int = 0x4;
+pub const MADV_NORMAL: ::c_int = 0x0;
+pub const MADV_RANDOM: ::c_int = 0x1;
+pub const MADV_SEQUENTIAL: ::c_int = 0x2;
+pub const MADV_WILLNEED: ::c_int = 0x3;
+pub const MADV_DONTNEED: ::c_int = 0x4;
+pub const MADV_FREE: ::c_int = 0x8;
+pub const MS_INVALIDATE: ::c_int = 0x2;
+pub const MCL_CURRENT: ::c_int = 0x1;
+pub const MCL_FUTURE: ::c_int = 0x2;
 
 // options/ansi/include/time.h
 pub const CLOCK_REALTIME: clockid_t = 0;
@@ -89,22 +89,22 @@ s! {
 }
 
 // options/ansi/include/bits/ansi/clockid_t.h
-pub type clockid_t = ::c_long;
+pub type clockid_t = ::c_int;
 
 // options/ansi/include/bits/ansi/time_t.h
 pub type time_t = ::c_long;
 
 // options/posix/include/bits/posix/suseconds_t.h
-pub type suseconds_t = ::c_long;
+pub type suseconds_t = i64;
 
-// abis/mlibc/dev_t.h
-pub type dev_t = ::c_ulong;
+// abis/linux/dev_t.h
+pub type dev_t = u64;
 
 // options/posix/include/bits/posix/fsblkcnt_t.h
-pub type fsblkcnt_t = ::c_uint;
+pub type fsblkcnt_t = u64;
 
 // options/posix/include/bits/posix/fsfilcnt_t.h
-pub type fsfilcnt_t = ::c_uint;
+pub type fsfilcnt_t = u64;
 
 // options/linux/include/sys/timerfd.h
 pub const TFD_TIMER_ABSTIME: ::c_int = 1;
@@ -335,17 +335,17 @@ pub const TIOCGWINSZ: ::c_ulong = 0x5413;
 pub const TIOCSCTTY: ::c_ulong = 0x540E;
 pub const TIOCSWINSZ: ::c_ulong = 0x5414;
 
-// abis/mlibc/ino_t.h
-pub type ino_t = ::c_long;
+// abis/linux/ino_t.h
+pub type ino_t = u64;
 
-// abis/mlibc/blksize_t.h
+// abis/linux/blksize_t.h
 pub type blksize_t = ::c_long;
 
-// abis/mlibc/blkcnt_t.h
-pub type blkcnt_t = ::c_long;
+// abis/linux/blkcnt_t.h
+pub type blkcnt_t = i64;
 
-// abis/mlibc/nlink_t.h
-pub type nlink_t = ::c_int;
+// abis/linux/nlink_t.h
+pub type nlink_t = ::c_ulong;
 
 // options/posix/include/bits/posix/in_addr_t.h
 pub type in_addr_t = u32;
@@ -373,13 +373,13 @@ s! {
 }
 
 // options/posix/include/unistd.h
-pub const F_OK: ::c_int = 1;
-pub const R_OK: ::c_int = 2;
+pub const F_OK: ::c_int = 0;
+pub const R_OK: ::c_int = 4;
 pub const STDERR_FILENO: ::c_int = 2;
 pub const STDIN_FILENO: ::c_int = 0;
 pub const STDOUT_FILENO: ::c_int = 1;
-pub const W_OK: ::c_int = 4;
-pub const X_OK: ::c_int = 8;
+pub const W_OK: ::c_int = 2;
+pub const X_OK: ::c_int = 1;
 pub const _PC_NAME_MAX: ::c_int = 3;
 pub const _SC_GETGR_R_SIZE_MAX: ::c_int = 7;
 pub const _SC_GETPW_R_SIZE_MAX: ::c_int = 1;
@@ -398,7 +398,8 @@ pub const AF_IPX: ::c_int = PF_IPX;
 pub const AF_ISDN: ::c_int = PF_ISDN;
 pub const AF_PACKET: ::c_int = PF_PACKET;
 pub const AF_SNA: ::c_int = PF_SNA;
-pub const AF_UNIX: ::c_int = 3;
+pub const AF_LOCAL: ::c_int = PF_LOCAL;
+pub const AF_UNIX: ::c_int = AF_LOCAL;
 pub const AF_UNSPEC: ::c_int = PF_UNSPEC;
 pub const MSG_CTRUNC: ::c_int = 1;
 pub const MSG_CMSG_CLOEXEC: ::c_int = 0x2000;
@@ -408,55 +409,56 @@ pub const MSG_OOB: ::c_int = 8;
 pub const MSG_PEEK: ::c_int = 0x20;
 pub const MSG_TRUNC: ::c_int = 0x40;
 pub const MSG_WAITALL: ::c_int = 0x80;
-pub const PF_APPLETALK: ::c_int = 7;
-pub const PF_BLUETOOTH: ::c_int = 8;
-pub const PF_DECnet: ::c_int = 9;
-pub const PF_INET6: ::c_int = 2;
-pub const PF_INET: ::c_int = 1;
-pub const PF_IPX: ::c_int = 10;
-pub const PF_ISDN: ::c_int = 11;
-pub const PF_PACKET: ::c_int = 13;
-pub const PF_SNA: ::c_int = 12;
-pub const PF_UNIX: ::c_int = 3;
-pub const PF_UNSPEC: ::c_int = 4;
+pub const PF_APPLETALK: ::c_int = 5;
+pub const PF_BLUETOOTH: ::c_int = 31;
+pub const PF_DECnet: ::c_int = 12;
+pub const PF_INET6: ::c_int = 10;
+pub const PF_INET: ::c_int = 2;
+pub const PF_LOCAL: ::c_int = 3;
+pub const PF_IPX: ::c_int = 4;
+pub const PF_ISDN: ::c_int = 34;
+pub const PF_PACKET: ::c_int = 17;
+pub const PF_SNA: ::c_int = 22;
+pub const PF_UNIX: ::c_int = PF_LOCAL;
+pub const PF_UNSPEC: ::c_int = 0;
 pub const SCM_RIGHTS: ::c_int = 1;
 pub const SCM_TIMESTAMP: ::c_int = SO_TIMESTAMP;
-pub const SHUT_RD: ::c_int = 1;
+pub const SHUT_RD: ::c_int = 0;
+pub const SHUT_WR: ::c_int = 1;
 pub const SHUT_RDWR: ::c_int = 2;
-pub const SHUT_WR: ::c_int = 3;
-pub const SOCK_DGRAM: ::c_int = 1;
-pub const SOCK_RAW: ::c_int = 2;
-pub const SOCK_RDM: ::c_int = 0x40000;
-pub const SOCK_SEQPACKET: ::c_int = 3;
-pub const SOCK_STREAM: ::c_int = 4;
+pub const SOCK_DGRAM: ::c_int = 2;
+pub const SOCK_RAW: ::c_int = 3;
+pub const SOCK_RDM: ::c_int = 4;
+pub const SOCK_SEQPACKET: ::c_int = 5;
+pub const SOCK_STREAM: ::c_int = 1;
 pub const SOL_SOCKET: ::c_int = 1;
-pub const SO_ACCEPTCONN: ::c_int = 1;
-pub const SO_ATTACH_FILTER: ::c_int = 19;
-pub const SO_BROADCAST: ::c_int = 2;
-pub const SO_DEBUG: ::c_int = 3;
-pub const SO_DONTROUTE: ::c_int = 4;
-pub const SO_ERROR: ::c_int = 5;
-pub const SO_KEEPALIVE: ::c_int = 6;
-pub const SO_LINGER: ::c_int = 7;
-pub const SO_OOBINLINE: ::c_int = 8;
-pub const SO_PASSCRED: ::c_int = 20;
-pub const SO_PEERCRED: ::c_int = 18;
-pub const SO_RCVBUF: ::c_int = 9;
-pub const SO_RCVBUFFORCE: ::c_int = 21;
-pub const SO_RCVLOWAT: ::c_int = 10;
-pub const SO_RCVTIMEO: ::c_int = 11;
-pub const SO_REUSEADDR: ::c_int = 12;
-pub const SO_REUSEPORT: ::c_int = 24;
-pub const SO_SNDBUF: ::c_int = 13;
-pub const SO_SNDBUFFORCE: ::c_int = 17;
-pub const SO_SNDLOWAT: ::c_int = 14;
-pub const SO_SNDTIMEO: ::c_int = 15;
-pub const SO_TIMESTAMP: ::c_int = 25;
-pub const SO_TYPE: ::c_int = 16;
+pub const SO_ACCEPTCONN: ::c_int = 30;
+pub const SO_ATTACH_FILTER: ::c_int = 26;
+pub const SO_BROADCAST: ::c_int = 6;
+//pub const SO_DEBUG: ::c_int = 3; // NANI NOT IN ABI
+pub const SO_DONTROUTE: ::c_int = 5;
+pub const SO_ERROR: ::c_int = 4;
+pub const SO_KEEPALIVE: ::c_int = 9;
+pub const SO_LINGER: ::c_int = 13;
+pub const SO_OOBINLINE: ::c_int = 10;
+pub const SO_PASSCRED: ::c_int = 16;
+pub const SO_PEERCRED: ::c_int = 17;
+pub const SO_RCVBUF: ::c_int = 8;
+pub const SO_RCVBUFFORCE: ::c_int = 33;
+pub const SO_RCVLOWAT: ::c_int = 18;
+pub const SO_RCVTIMEO: ::c_int = 20;
+pub const SO_REUSEADDR: ::c_int = 2;
+pub const SO_REUSEPORT: ::c_int = 15;
+pub const SO_SNDBUF: ::c_int = 7;
+pub const SO_SNDBUFFORCE: ::c_int = 32;
+pub const SO_SNDLOWAT: ::c_int = 19;
+pub const SO_SNDTIMEO: ::c_int = 21;
+pub const SO_TIMESTAMP: ::c_int = 29;
+pub const SO_TYPE: ::c_int = 3;
 pub const TCP_KEEPCNT: ::c_int = 6;
 pub const TCP_KEEPIDLE: ::c_int = 4;
 pub const TCP_KEEPINTVL: ::c_int = 5;
-pub const MSG_NOSIGNAL: ::c_int = 0x10;
+pub const MSG_NOSIGNAL: ::c_int = 0x4000;
 
 pub type sa_family_t = ::c_uint;
 s! {
@@ -527,82 +529,83 @@ f! {
     }
 }
 
-// abis/mlibc/errno.h
-pub const E2BIG: ::c_int = 1001;
-pub const EACCES: ::c_int = 1002;
-pub const EADDRINUSE: ::c_int = 1003;
-pub const EADDRNOTAVAIL: ::c_int = 1004;
-pub const EAGAIN: ::c_int = 1006;
-pub const EBADF: ::c_int = 1008;
-pub const EBUSY: ::c_int = 1010;
-pub const ECONNABORTED: ::c_int = 1013;
-pub const ECONNREFUSED: ::c_int = 1014;
-pub const ECONNRESET: ::c_int = 1015;
-pub const EDEADLK: ::c_int = 1016;
-pub const EDQUOT: ::c_int = 1018;
-pub const EEXIST: ::c_int = 1019;
-pub const EFBIG: ::c_int = 1021;
-pub const EHOSTUNREACH: ::c_int = 1022;
-pub const EINPROGRESS: ::c_int = 1024;
-pub const EINTR: ::c_int = 1025;
-pub const EINVAL: ::c_int = 1026;
-pub const EISDIR: ::c_int = 1029;
-pub const ELOOP: ::c_int = 1030;
-pub const EMLINK: ::c_int = 1032;
-pub const ENAMETOOLONG: ::c_int = 1036;
-pub const ENETDOWN: ::c_int = 1037;
-pub const ENETUNREACH: ::c_int = 1039;
-pub const ENOENT: ::c_int = 1043;
-pub const ENOMEM: ::c_int = 1047;
-pub const ENOSPC: ::c_int = 1050;
-pub const ENOSYS: ::c_int = 1051;
-pub const ENOTCONN: ::c_int = 1052;
-pub const ENOTDIR: ::c_int = 1053;
-pub const ENOTEMPTY: ::c_int = 1054;
-pub const ENOTTY: ::c_int = 1058;
-pub const EPERM: ::c_int = 1063;
-pub const EPIPE: ::c_int = 1064;
-pub const ERANGE: ::c_int = 3;
-pub const EROFS: ::c_int = 1068;
-pub const ESPIPE: ::c_int = 1069;
-pub const ESTALE: ::c_int = 1071;
-pub const ETIMEDOUT: ::c_int = 1072;
-pub const ETXTBSY: ::c_int = 1073;
+// abis/linux/errno.h
+pub const E2BIG: ::c_int = 7;
+pub const EACCES: ::c_int = 13;
+pub const EADDRINUSE: ::c_int = 98;
+pub const EADDRNOTAVAIL: ::c_int = 99;
+pub const EAGAIN: ::c_int = 11;
+pub const EBADF: ::c_int = 9;
+pub const EBUSY: ::c_int = 16;
+pub const ECONNABORTED: ::c_int = 103;
+pub const ECONNREFUSED: ::c_int = 111;
+pub const ECONNRESET: ::c_int = 104;
+pub const EDEADLK: ::c_int = 35;
+pub const EDQUOT: ::c_int = 122;
+pub const EEXIST: ::c_int = 17;
+pub const EFBIG: ::c_int = 27;
+pub const EHOSTUNREACH: ::c_int = 113;
+pub const EINPROGRESS: ::c_int = 115;
+pub const EINTR: ::c_int = 4;
+pub const EINVAL: ::c_int = 22;
+pub const EISDIR: ::c_int = 21;
+pub const ELOOP: ::c_int = 40;
+pub const EMLINK: ::c_int = 31;
+pub const ENAMETOOLONG: ::c_int = 36;
+pub const ENETDOWN: ::c_int = 100;
+pub const ENETUNREACH: ::c_int = 101;
+pub const ENOENT: ::c_int = 2;
+pub const ENOMEM: ::c_int = 12;
+pub const ENOSPC: ::c_int = 28;
+pub const ENOSYS: ::c_int = 38;
+pub const ENOTCONN: ::c_int = 107;
+pub const ENOTDIR: ::c_int = 20;
+pub const ENOTEMPTY: ::c_int = 39;
+pub const ENOTTY: ::c_int = 25;
+pub const EPERM: ::c_int = 1;
+pub const EPIPE: ::c_int = 32;
+pub const ERANGE: ::c_int = 34;
+pub const EROFS: ::c_int = 30;
+pub const ESPIPE: ::c_int = 29;
+pub const ESTALE: ::c_int = 116;
+pub const ETIMEDOUT: ::c_int = 110;
+pub const ETXTBSY: ::c_int = 26;
 pub const EWOULDBLOCK: ::c_int = EAGAIN;
-pub const EXDEV: ::c_int = 1075;
-pub const EPROTO: ::c_int = 1065;
-pub const ENOTSUP: ::c_int = 1057;
+pub const EXDEV: ::c_int = 18;
+pub const EPROTO: ::c_int = 71;
+pub const ENOTSUP: ::c_int = 95;
 
 // options/posix/include/fcntl.h
+pub const O_PATH: ::c_int = 0o10000000;
 pub const AT_FDCWD: ::c_int = -100;
-pub const AT_REMOVEDIR: ::c_int = 8;
-pub const AT_SYMLINK_FOLLOW: ::c_int = 2;
-pub const AT_SYMLINK_NOFOLLOW: ::c_int = 4;
-pub const F_DUPFD: ::c_int = 1;
-pub const F_DUPFD_CLOEXEC: ::c_int = 2;
-pub const F_GETFD: ::c_int = 3;
-pub const F_GETFL: ::c_int = 5;
-pub const F_GETLK: ::c_int = 7;
-pub const F_SETFD: ::c_int = 4;
-pub const F_SETFL: ::c_int = 6;
-pub const F_SETLK: ::c_int = 8;
-pub const F_SETLKW: ::c_int = 9;
-pub const O_ACCMODE: ::c_int = 7;
-pub const O_APPEND: ::c_int = 8;
-pub const O_ASYNC: ::c_int = 0x40000;
-pub const O_CLOEXEC: ::c_int = 0x4000;
-pub const O_CREAT: ::c_int = 0x10;
-pub const O_DIRECTORY: ::c_int = 0x00020;
-pub const O_EXCL: ::c_int = 0x40;
+pub const AT_REMOVEDIR: ::c_int = 0x200;
+pub const AT_SYMLINK_FOLLOW: ::c_int = 0x400;
+pub const AT_SYMLINK_NOFOLLOW: ::c_int = 0x100;
+pub const F_DUPFD: ::c_int = 0;
+pub const F_DUPFD_CLOEXEC: ::c_int = 1030;
+pub const F_GETFD: ::c_int = 1;
+pub const F_GETFL: ::c_int = 3;
+pub const F_GETLK: ::c_int = 5;
+pub const F_SETFD: ::c_int = 2;
+pub const F_SETFL: ::c_int = 4;
+pub const F_SETLK: ::c_int = 6;
+pub const F_SETLKW: ::c_int = 7;
+pub const O_ACCMODE: ::c_int = (3 | O_PATH);
+pub const O_APPEND: ::c_int = 0o2000;
+pub const O_ASYNC: ::c_int = 0o20000;
+pub const O_CLOEXEC: ::c_int = 0o2000000;
+pub const O_CREAT: ::c_int = 0o100;
+pub const O_DIRECTORY: ::c_int = 0o200000;
+pub const O_EXCL: ::c_int = 0o200;
 pub const O_NDELAY: ::c_int = 0x400;
-pub const O_NOCTTY: ::c_int = 0x80;
-pub const O_NOFOLLOW: ::c_int = 0x100;
-pub const O_NONBLOCK: ::c_int = 0x400;
-pub const O_RDONLY: ::c_int = 2;
-pub const O_RDWR: ::c_int = 3;
-pub const O_SYNC: ::c_int = 0x2000;
-pub const O_TRUNC: ::c_int = 0x200;
-pub const O_WRONLY: ::c_int = 5;
+pub const O_NOCTTY: ::c_int = 0o400;
+pub const O_NOFOLLOW: ::c_int = 0o400000;
+pub const O_NONBLOCK: ::c_int = 0o4000;
+pub const O_RDONLY: ::c_int = 0o0;
+pub const O_RDWR: ::c_int = 0o2;
+pub const O_SYNC: ::c_int = 0o4010000;
+pub const O_TRUNC: ::c_int = 0o1000;
+pub const O_WRONLY: ::c_int = 0o1;
 s! {
     pub struct flock {
         pub l_type: ::c_short,
@@ -619,10 +622,10 @@ pub const LOCK_NB: ::c_int = 4;
 pub const LOCK_SH: ::c_int = 1;
 pub const LOCK_UN: ::c_int = 8;
 
-// options/mlibc/seek-whence.h
+// options/linux/seek-whence.h
+pub const SEEK_SET: ::c_int = 0;
 pub const SEEK_CUR: ::c_int = 1;
 pub const SEEK_END: ::c_int = 2;
-pub const SEEK_SET: ::c_int = 3;
 
 // options/posix/include/netinet/tcp.h
 pub const TCP_NODELAY: ::c_int = 1;
@@ -686,45 +689,48 @@ s! {
 
 // options/posix/include/sys/wait.h
 pub const WCOREFLAG: ::c_int = 0x80;
-pub const WNOHANG: ::c_int = 2;
+pub const WNOHANG: ::c_int = 1;
 safe_f! {
     pub {const} fn WCOREDUMP(x: ::c_int) -> bool {
         x & WCOREFLAG != 0
     }
     pub {const} fn WEXITSTATUS(x: ::c_int) -> ::c_int {
-        x & 0xFF
+        (x & 0xFF00) >> 8
     }
     pub {const} fn WIFCONTINUED(x: ::c_int) -> bool {
-        x & 0x100 != 0
+        x == 0xffff
+        // x & 0x100 != 0
     }
     pub {const} fn WIFEXITED(x: ::c_int) -> bool {
-        x & 0x200 != 0
+        (WTERMSIG(x) == 0)
     }
     pub {const} fn WIFSIGNALED(x: ::c_int) -> bool {
-        x & 0x400 != 0
+        ((((x & 0x7f) + 1) >> 1) > 0)
+        // x & 0x400 != 0
     }
     pub {const} fn WIFSTOPPED(x: ::c_int) -> bool {
-        x & 0x800 != 0
+        (x & 0xff) == 0x7f
+        // x & 0x800 != 0
     }
     pub {const} fn WSTOPSIG(x: ::c_int) -> ::c_int {
-        (x & 0xFF_0000) >> 16
+        WEXITSTATUS(x)
     }
     pub {const} fn WTERMSIG(x: ::c_int) -> ::c_int {
-        (x & 0xFF00_0000) >> 24
+        x & 0x7f
     }
 }
 
 // options/linux/include/sys/poll.h
-pub const POLLHUP: ::c_short = 8;
-pub const POLLIN: ::c_short = 1;
-pub const POLLNVAL: ::c_short = 0x40;
-pub const POLLOUT: ::c_short = 2;
-pub const POLLPRI: ::c_short = 0x04;
-pub const POLLWRNORM: ::c_short = 0x80;
-pub const POLLRDNORM: ::c_short = 0x100;
-pub const POLLWRBAND: ::c_short = 0x200;
-pub const POLLRDBAND: ::c_short = 0x400;
-pub const POLLERR: ::c_short = 0x10;
+pub const POLLHUP: ::c_short = 0x0010;
+pub const POLLIN: ::c_short = 0x0001;
+pub const POLLNVAL: ::c_short = 0x0020;
+pub const POLLOUT: ::c_short = 0x0004;
+pub const POLLPRI: ::c_short = 0x0002;
+pub const POLLWRNORM: ::c_short = 0x0100;
+pub const POLLRDNORM: ::c_short = 0x0040;
+pub const POLLWRBAND: ::c_short = 0x0200;
+pub const POLLRDBAND: ::c_short = 0x0080;
+pub const POLLERR: ::c_short = 0x0008;
 pub type nfds_t = ::size_t;
 
 // options/linux/include/sys/epoll.h
@@ -742,7 +748,7 @@ pub const EPOLLRDNORM: ::c_int = 0x40;
 pub const EPOLLWRBAND: ::c_int = 0x200;
 pub const EPOLLWRNORM: ::c_int = 0x100;
 pub const EPOLLWAKEUP: ::c_int = 1 << 29;
-pub const EPOLL_CLOEXEC: ::c_int = 1;
+pub const EPOLL_CLOEXEC: ::c_int = 02000000;
 pub const EPOLL_CTL_ADD: ::c_int = 1;
 pub const EPOLL_CTL_DEL: ::c_int = 2;
 pub const EPOLL_CTL_MOD: ::c_int = 3;
@@ -861,11 +867,16 @@ s! {
 }
 
 // options/posix/include/bits/posix/pthread.h
-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t { __mlibc_seq: 0 };
+pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {
+    __mlibc_seq: 0,
+    __mlibc_flags: 0,
+    __mlibc_clock: 0,
+};
 pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {
     __mlibc_state: 0,
     __mlibc_recursion: 0,
     __mlibc_flags: 0,
+    __mlibc_prioceiling: 0,
 };
 pub const PTHREAD_MUTEX_NORMAL: ::c_int = 0;
 pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 2;
@@ -881,16 +892,22 @@ s! {
     }
     pub struct pthread_cond_t {
         pub __mlibc_seq: ::c_uint,
+        pub __mlibc_flags: ::c_uint,
+        pub __mlibc_clock: clockid_t,
     }
     pub struct pthread_condattr_t {}
     pub struct pthread_mutex_t {
         pub __mlibc_state: ::c_uint,
         pub __mlibc_recursion: ::c_uint,
         pub __mlibc_flags: ::c_uint,
+        pub __mlibc_prioceiling: ::c_int,
     }
     pub struct pthread_mutexattr_t {
         pub __mlibc_type: ::c_int,
         pub __mlibc_robust: ::c_int,
+        pub __mlibc_protocol: ::c_int,
+        pub __mlibc_pshared: ::c_int,
+        pub __mlibc_prioceiling: ::c_int,
     }
     pub struct pthread_rwlock_t {
         pub __mlibc_m: ::c_uint,
@@ -999,17 +1016,17 @@ s! {
     }
 }
 
-// abis/mlibc/in.h
-pub const IPV6_ADD_MEMBERSHIP: ::c_int = 1;
-pub const IPV6_DROP_MEMBERSHIP: ::c_int = 2;
-pub const IPV6_MULTICAST_HOPS: ::c_int = 3;
-pub const IPV6_MULTICAST_IF: ::c_int = 4;
-pub const IPV6_MULTICAST_LOOP: ::c_int = 5;
-pub const IPV6_UNICAST_HOPS: ::c_int = 6;
-pub const IPV6_V6ONLY: ::c_int = 7;
+// abis/linux/in.h
+pub const IPV6_ADD_MEMBERSHIP: ::c_int = 20;
+pub const IPV6_DROP_MEMBERSHIP: ::c_int = 21;
+pub const IPV6_MULTICAST_HOPS: ::c_int = 18;
+pub const IPV6_MULTICAST_IF: ::c_int = 17;
+pub const IPV6_MULTICAST_LOOP: ::c_int = 19;
+pub const IPV6_UNICAST_HOPS: ::c_int = 16;
+pub const IPV6_V6ONLY: ::c_int = 26;
 pub const IP_ADD_MEMBERSHIP: ::c_int = 35;
 pub const IP_DROP_MEMBERSHIP: ::c_int = 36;
-pub const IP_MULTICAST_IF: ::c_int = 4;
+pub const IP_MULTICAST_IF: ::c_int = 32;
 pub const IP_MULTICAST_LOOP: ::c_int = 34;
 pub const IP_MULTICAST_TTL: ::c_int = 33;
 pub const IP_TTL: ::c_int = 2;
@@ -1205,4 +1222,9 @@ extern "C" {
     pub fn timer_delete(timerid: ::timer_t) -> ::c_int;
     pub fn clock_getres(clk_id: ::clockid_t, tp: *mut ::timespec) -> ::c_int;
     pub fn strerror_r(errnum: ::c_int, buf: *mut ::c_char, buflen: ::size_t) -> ::c_int;
+    pub fn pthread_atfork(
+        prepare: ::Option<unsafe extern "C" fn()>,
+        parent: ::Option<unsafe extern "C" fn()>,
+        child: ::Option<unsafe extern "C" fn()>,
+    ) -> ::c_int;
 }
-- 
2.42.0

