From ba9081c05d5cca4ecbd732563fd7b448d64b233e Mon Sep 17 00:00:00 2001
From: Matt Taylor <mstaveleytaylor@gmail.com>
Date: Mon, 31 May 2021 21:19:44 +0100
Subject: [PATCH 2/2] managarm: fix build target in x.py and bootstrap

---
 src/bootstrap/bootstrap.py | 8 ++++++--
 src/bootstrap/builder.rs   | 6 ++++--
 2 files changed, 10 insertions(+), 4 deletions(-)

diff --git a/src/bootstrap/bootstrap.py b/src/bootstrap/bootstrap.py
index 6708b27b..0a8a5c49 100644
--- a/src/bootstrap/bootstrap.py
+++ b/src/bootstrap/bootstrap.py
@@ -796,7 +796,7 @@ class RustBuild(object):
         ... "debug", "bootstrap")
         True
         """
-        return os.path.join(self.build_dir, "bootstrap", "debug", "bootstrap")
+        return os.path.join(self.build_dir, "bootstrap", self.build, "debug", "bootstrap")
 
     def build_bootstrap(self):
         """Build bootstrap"""
@@ -804,7 +804,7 @@ class RustBuild(object):
         if self.clean and os.path.exists(build_dir):
             shutil.rmtree(build_dir)
         env = os.environ.copy()
-        # `CARGO_BUILD_TARGET` breaks bootstrap build.
+        # `CARGO_BUILD_TARGET` and 'build.target' break bootstrap build.
         # See also: <https://github.com/rust-lang/rust/issues/70208>.
         if "CARGO_BUILD_TARGET" in env:
             del env["CARGO_BUILD_TARGET"]
@@ -852,6 +852,10 @@ class RustBuild(object):
             args.append("--locked")
         if self.use_vendored_sources:
             args.append("--frozen")
+
+        args.append("--target")
+        args.append(self.build)
+
         run(args, env=env, verbose=self.verbose)
 
     def build_triple(self):
diff --git a/src/bootstrap/builder.rs b/src/bootstrap/builder.rs
index f1a16025..c00cf4cd 100644
--- a/src/bootstrap/builder.rs
+++ b/src/bootstrap/builder.rs
@@ -1023,6 +1023,8 @@ pub fn cargo(
             self.clear_if_dirty(&out_dir, &self.rustc(compiler));
         }
 
+        let artifact_dir = self.out.join("bootstrap/").join(self.build.build.triple).join("debug/");
+
         // Customize the compiler we're running. Specify the compiler to cargo
         // as our shim and then pass it some various options used to configure
         // how the actual compiler itself is called.
@@ -1035,7 +1037,7 @@ pub fn cargo(
             .env("RUSTC_STAGE", stage.to_string())
             .env("RUSTC_SYSROOT", &sysroot)
             .env("RUSTC_LIBDIR", &libdir)
-            .env("RUSTDOC", self.out.join("bootstrap/debug/rustdoc"))
+            .env("RUSTDOC", artifact_dir.join("rustdoc"))
             .env(
                 "RUSTDOC_REAL",
                 if cmd == "doc" || cmd == "rustdoc" || (cmd == "test" && want_rustdoc) {
@@ -1049,7 +1051,7 @@ pub fn cargo(
         // Clippy support is a hack and uses the default `cargo-clippy` in path.
         // Don't override RUSTC so that the `cargo-clippy` in path will be run.
         if cmd != "clippy" {
-            cargo.env("RUSTC", self.out.join("bootstrap/debug/rustc"));
+            cargo.env("RUSTC", artifact_dir.join("rustc"));
         }
 
         // Dealing with rpath here is a little special, so let's go into some
-- 
2.31.1

